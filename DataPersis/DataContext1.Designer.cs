//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 3/10/2017 11:27:40 a.m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Medicapp13Context
{

    [DatabaseAttribute(Name = "medicapp1.3")]
    [ProviderAttribute(typeof(Devart.Data.PostgreSql.Linq.Provider.PgSqlDataProvider))]
    public partial class Medicapp13DataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(Medicapp13DataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertMedicina(Medicina instance);
        partial void UpdateMedicina(Medicina instance);
        partial void DeleteMedicina(Medicina instance);
        partial void InsertTipo(Tipo instance);
        partial void UpdateTipo(Tipo instance);
        partial void DeleteTipo(Tipo instance);
        partial void InsertAlergia(Alergia instance);
        partial void UpdateAlergia(Alergia instance);
        partial void DeleteAlergia(Alergia instance);
        partial void InsertParametrizacion(Parametrizacion instance);
        partial void UpdateParametrizacion(Parametrizacion instance);
        partial void DeleteParametrizacion(Parametrizacion instance);
        partial void InsertHojaDeVida(HojaDeVida instance);
        partial void UpdateHojaDeVida(HojaDeVida instance);
        partial void DeleteHojaDeVida(HojaDeVida instance);
        partial void InsertAlergicita(Alergicita instance);
        partial void UpdateAlergicita(Alergicita instance);
        partial void DeleteAlergicita(Alergicita instance);
        partial void InsertCirucita(Cirucita instance);
        partial void UpdateCirucita(Cirucita instance);
        partial void DeleteCirucita(Cirucita instance);
        partial void InsertMedicita(Medicita instance);
        partial void UpdateMedicita(Medicita instance);
        partial void DeleteMedicita(Medicita instance);
        partial void InsertHorario(Horario instance);
        partial void UpdateHorario(Horario instance);
        partial void DeleteHorario(Horario instance);
        partial void InsertCita(Cita instance);
        partial void UpdateCita(Cita instance);
        partial void DeleteCita(Cita instance);
        partial void InsertCirugia(Cirugia instance);
        partial void UpdateCirugia(Cirugia instance);
        partial void DeleteCirugia(Cirugia instance);
        partial void InsertRol(Rol instance);
        partial void UpdateRol(Rol instance);
        partial void DeleteRol(Rol instance);
        partial void InsertUsuario(Usuario instance);
        partial void UpdateUsuario(Usuario instance);
        partial void DeleteUsuario(Usuario instance);

        #endregion

        public Medicapp13DataContext() :
        base(GetConnectionString("Medicapp13DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public Medicapp13DataContext(MappingSource mappingSource) :
        base(GetConnectionString("Medicapp13DataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public Medicapp13DataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Medicapp13DataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Medicapp13DataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Medicapp13DataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Medicina> Medicinas
        {
            get
            {
                return this.GetTable<Medicina>();
            }
        }

        public Devart.Data.Linq.Table<Tipo> Tipos
        {
            get
            {
                return this.GetTable<Tipo>();
            }
        }

        public Devart.Data.Linq.Table<Alergia> Alergias
        {
            get
            {
                return this.GetTable<Alergia>();
            }
        }

        public Devart.Data.Linq.Table<Parametrizacion> Parametrizacions
        {
            get
            {
                return this.GetTable<Parametrizacion>();
            }
        }

        public Devart.Data.Linq.Table<HojaDeVida> HojaDeVidas
        {
            get
            {
                return this.GetTable<HojaDeVida>();
            }
        }

        public Devart.Data.Linq.Table<Alergicita> Alergicitas
        {
            get
            {
                return this.GetTable<Alergicita>();
            }
        }

        public Devart.Data.Linq.Table<Cirucita> Cirucitas
        {
            get
            {
                return this.GetTable<Cirucita>();
            }
        }

        public Devart.Data.Linq.Table<Medicita> Medicitas
        {
            get
            {
                return this.GetTable<Medicita>();
            }
        }

        public Devart.Data.Linq.Table<Horario> Horarios
        {
            get
            {
                return this.GetTable<Horario>();
            }
        }

        public Devart.Data.Linq.Table<Cita> Citas
        {
            get
            {
                return this.GetTable<Cita>();
            }
        }

        public Devart.Data.Linq.Table<Cirugia> Cirugias
        {
            get
            {
                return this.GetTable<Cirugia>();
            }
        }

        public Devart.Data.Linq.Table<Rol> Rols
        {
            get
            {
                return this.GetTable<Rol>();
            }
        }

        public Devart.Data.Linq.Table<Usuario> Usuarios
        {
            get
            {
                return this.GetTable<Usuario>();
            }
        }

        public Devart.Data.Linq.Table<Mostrarcitasvistaid> Mostrarcitasvistaids
        {
            get
            {
                return this.GetTable<Mostrarcitasvistaid>();
            }
        }

        public Devart.Data.Linq.Table<Mostrarcitasdoc> Mostrarcitasdocs
        {
            get
            {
                return this.GetTable<Mostrarcitasdoc>();
            }
        }

        public Devart.Data.Linq.Table<Mostrarcitasvista> Mostrarcitasvistas
        {
            get
            {
                return this.GetTable<Mostrarcitasvista>();
            }
        }

    
        /// <summary>
        /// There are no comments for FAddPaciente1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_paciente:1", IsComposable=true)]
        public void FAddPaciente1([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="tiposangre_", DbType="TEXT")] string tiposangre_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="examen_", DbType="TEXT")] string examen_)
        {
            IExecuteResult _FAddPaciente1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, tiposangre_, idrol_, url_, examen_);
        }

    
        /// <summary>
        /// There are no comments for Modificarusuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.modificarusuario", IsComposable=true)]
        public System.Nullable<System.Boolean> Modificarusuario([Parameter(Name="id_user", DbType="INTEGER")] System.Nullable<int> id_user, [Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_apellido", DbType="CHARACTER VARYING")] string _apellido, [Parameter(Name="_clave", DbType="CHARACTER VARYING")] string _clave, [Parameter(Name="_edad", DbType="CHARACTER VARYING")] string _edad)
        {
            IExecuteResult _ModificarusuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_user, _nombre, _apellido, _clave, _edad);
            return ((System.Nullable<System.Boolean>)(_ModificarusuarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FSolicitarCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_solicitar_cita", IsComposable=true)]
        public System.Nullable<System.Boolean> FSolicitarCita([Parameter(Name="id_usuario_", DbType="INTEGER")] System.Nullable<int> id_usuario_, [Parameter(Name="id_cita_", DbType="INTEGER")] System.Nullable<int> id_cita_)
        {
            IExecuteResult _FSolicitarCitaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario_, id_cita_);
            return ((System.Nullable<System.Boolean>)(_FSolicitarCitaResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FBuscaPaciente in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_paciente", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FBuscaPaciente()
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FVerificarCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_verificar_cita", IsComposable=true)]
        public System.Linq.IQueryable<FVerificarCitaResult> FVerificarCita([Parameter(Name="_id_cita", DbType="INTEGER")] System.Nullable<int> _id_cita, [Parameter(Name="_id_usuario", DbType="INTEGER")] System.Nullable<int> _id_usuario)
        {
            return this.CreateMethodCallQuery<FVerificarCitaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id_cita, _id_usuario);
        }

    
        /// <summary>
        /// There are no comments for FAddDoctor2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_doctor:2", IsComposable=true)]
        public void FAddDoctor2([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="estado_", DbType="TEXT")] string estado_)
        {
            IExecuteResult _FAddDoctor2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, idrol_, url_, estado_);
        }

    
        /// <summary>
        /// There are no comments for FGenerarCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_generar_citas", IsComposable=true)]
        public System.Object FGenerarCita()
        {
            IExecuteResult _FGenerarCitaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Object)(_FGenerarCitaResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for Buscarusuario2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscarusuario:2", IsComposable=true)]
        public System.Linq.IQueryable<Buscarusuario2Result> Buscarusuario2([Parameter(Name="user_", DbType="CHARACTER VARYING")] string user_, [Parameter(Name="clave_", DbType="CHARACTER VARYING")] string clave_, [Parameter(Name="ip_", DbType="TEXT")] string ip_, [Parameter(Name="mac_", DbType="TEXT")] string mac_)
        {
            return this.CreateMethodCallQuery<Buscarusuario2Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_, clave_, ip_, mac_);
        }

    
        /// <summary>
        /// There are no comments for FAddCirugia1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_cirugia:1", IsComposable=true)]
        public void FAddCirugia1([Parameter(Name="cirugia_", DbType="TEXT")] string cirugia_)
        {
            IExecuteResult _FAddCirugia1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cirugia_);
        }

    
        /// <summary>
        /// There are no comments for Buscarcitareporte in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscarcitareporte", IsComposable=true)]
        public System.Linq.IQueryable<BuscarcitareporteResult> Buscarcitareporte([Parameter(Name="id_paciente_", DbType="INTEGER")] System.Nullable<int> id_paciente_)
        {
            return this.CreateMethodCallQuery<BuscarcitareporteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_paciente_);
        }

    
        /// <summary>
        /// There are no comments for FBuscarDoctore in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscar_doctores", IsComposable=true)]
        public System.Linq.IQueryable<FBuscarDoctoreResult> FBuscarDoctore()
        {
            return this.CreateMethodCallQuery<FBuscarDoctoreResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FAddDoctor4 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_doctor:4", IsComposable=true)]
        public void FAddDoctor4([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="estado_", DbType="TEXT")] string estado_, [Parameter(Name="correo_", DbType="TEXT")] string correo_, [Parameter(Name="documento_", DbType="TEXT")] string documento_)
        {
            IExecuteResult _FAddDoctor4Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, idrol_, url_, estado_, correo_, documento_);
        }

    
        /// <summary>
        /// There are no comments for FCancelarCitasHoraDoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_cancelar_citas_hora_doctor", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FCancelarCitasHoraDoctor([Parameter(Name="id_user", DbType="INTEGER")] System.Nullable<int> id_user, [Parameter(Name="fecha_", DbType="DATE")] System.Nullable<System.DateTime> fecha_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_user, fecha_);
        }

    
        /// <summary>
        /// There are no comments for FBuscarusuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscarusuario", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FBuscarusuario([Parameter(Name="nombrebd", DbType="TEXT")] string nombrebd, [Parameter(Name="clavebd", DbType="TEXT")] string clavebd)
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombrebd, clavebd);
        }

    
        /// <summary>
        /// There are no comments for FBuscarAllusuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscar_allusuarios", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FBuscarAllusuario()
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctor2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctor:2", IsComposable=true)]
        public void FEditarDoctor2([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="estado_", DbType="TEXT")] string estado_, [Parameter(Name="url_", DbType="TEXT")] string url_)
        {
            IExecuteResult _FEditarDoctor2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_, username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, estado_, url_);
        }

    
        /// <summary>
        /// There are no comments for Mostrardoctoresrol in the schema.
        /// </summary>
        [Function(Name=@"hospital.mostrardoctoresrol", IsComposable=true)]
        public System.Linq.IQueryable<MostrardoctoresrolResult> Mostrardoctoresrol()
        {
            return this.CreateMethodCallQuery<MostrardoctoresrolResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FVerificarusuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_verificarusuario", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FVerificarusuario([Parameter(Name="user_", DbType="CHARACTER VARYING")] string user_)
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_);
        }

    
        /// <summary>
        /// There are no comments for FAddHojavida in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_hojavida", IsComposable=true)]
        public void FAddHojavida([Parameter(Name="perfil_", DbType="TEXT")] string perfil_, [Parameter(Name="bachiller_", DbType="TEXT")] string bachiller_, [Parameter(Name="universidad_", DbType="TEXT")] string universidad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="fellows_", DbType="TEXT")] string fellows_, [Parameter(Name="idiomas_", DbType="TEXT")] string idiomas_, [Parameter(Name="experiencia_", DbType="TEXT")] string experiencia_, [Parameter(Name="doctorid_", DbType="INTEGER")] System.Nullable<int> doctorid_)
        {
            IExecuteResult _FAddHojavidaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), perfil_, bachiller_, universidad_, estudios_, fellows_, idiomas_, experiencia_, doctorid_);
        }

    
        /// <summary>
        /// There are no comments for FEliminarCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_eliminar_cita", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEliminarCita([Parameter(Name="id_usuario", DbType="INTEGER")] System.Nullable<int> id_usuario)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario);
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctor4 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctor:4", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEditarDoctor4([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="estado_", DbType="TEXT")] string estado_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="correo_", DbType="TEXT")] string correo_, [Parameter(Name="documento_", DbType="TEXT")] string documento_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_, username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, estado_, url_, correo_, documento_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaTodosPaciente in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_todos_pacientes", IsComposable=true)]
        public System.Linq.IQueryable<FBuscaTodosPacienteResult> FBuscaTodosPaciente()
        {
            return this.CreateMethodCallQuery<FBuscaTodosPacienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctorv3 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctorv:3", IsComposable=true)]
        public void FEditarDoctorv3([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="imagen_", DbType="TEXT")] string imagen_, [Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="estado_", DbType="INTEGER")] System.Nullable<int> estado_, [Parameter(Name="documento_", DbType="TEXT")] string documento_, [Parameter(Name="correo_", DbType="TEXT")] string correo_)
        {
            IExecuteResult _FEditarDoctorv3Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, imagen_, idusuario_, estado_, documento_, correo_);
        }

    
        /// <summary>
        /// There are no comments for FAddPaciente2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_paciente:2", IsComposable=true)]
        public void FAddPaciente2([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="tiposangre_", DbType="TEXT")] string tiposangre_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="examen_", DbType="DATE")] System.Nullable<System.DateTime> examen_, [Parameter(Name="correo_", DbType="TEXT")] string correo_, [Parameter(Name="documento_", DbType="TEXT")] string documento_)
        {
            IExecuteResult _FAddPaciente2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, tiposangre_, idrol_, url_, examen_, correo_, documento_);
        }

    
        /// <summary>
        /// There are no comments for Alergiasreporte in the schema.
        /// </summary>
        [Function(Name=@"hospital.alergiasreporte", IsComposable=true)]
        public System.Linq.IQueryable<AlergiasreporteResult> Alergiasreporte([Parameter(Name="id_paciente_", DbType="INTEGER")] System.Nullable<int> id_paciente_)
        {
            return this.CreateMethodCallQuery<AlergiasreporteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_paciente_);
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctor1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctor:1", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEditarDoctor1([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="url_", DbType="TEXT")] string url_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_, username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, url_);
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctorv2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctorv:2", IsComposable=true)]
        public void FEditarDoctorv2([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="imagen_", DbType="TEXT")] string imagen_, [Parameter(Name="estado_", DbType="INTEGER")] System.Nullable<int> estado_, [Parameter(Name="documento_", DbType="TEXT")] string documento_, [Parameter(Name="correo_", DbType="TEXT")] string correo_)
        {
            IExecuteResult _FEditarDoctorv2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, idusuario_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, imagen_, estado_, documento_, correo_);
        }

    
        /// <summary>
        /// There are no comments for FAddCitadoctor3 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_citadoctor3", IsComposable=true)]
        public System.Nullable<System.Boolean> FAddCitadoctor3([Parameter(Name="diagnostico_", DbType="TEXT")] string diagnostico_, [Parameter(Name="iddoctor_", DbType="INTEGER")] System.Nullable<int> iddoctor_, [Parameter(Name="idcita_", DbType="INTEGER")] System.Nullable<int> idcita_, [Parameter(Name="cirugia_", DbType="TEXT")] string cirugia_, [Parameter(Name="descripcirugia_", DbType="TEXT")] string descripcirugia_, [Parameter(Name="fechacirugia_", DbType="TEXT")] string fechacirugia_, [Parameter(Name="idmedicina_", DbType="INTEGER")] System.Nullable<int> idmedicina_, [Parameter(Name="dosis_", DbType="INTEGER")] System.Nullable<int> dosis_, [Parameter(Name="fechafinmedicina_", DbType="TEXT")] string fechafinmedicina_)
        {
            IExecuteResult _FAddCitadoctor3Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagnostico_, iddoctor_, idcita_, cirugia_, descripcirugia_, fechacirugia_, idmedicina_, dosis_, fechafinmedicina_);
            return ((System.Nullable<System.Boolean>)(_FAddCitadoctor3Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FVerAlergia in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_ver_alergias", IsComposable=true)]
        public System.Linq.IQueryable<Alergia> FVerAlergia()
        {
            return this.CreateMethodCallQuery<Alergia>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FAddMedicita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_medicita", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FAddMedicita([Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="dosis_", DbType="TEXT")] string dosis_, [Parameter(Name="idcita_", DbType="INTEGER")] System.Nullable<int> idcita_, [Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="fechainicio_", DbType="DATE")] System.Nullable<System.DateTime> fechainicio_, [Parameter(Name="fechafin_", DbType="DATE")] System.Nullable<System.DateTime> fechafin_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre_, dosis_, idcita_, idusuario_, fechainicio_, fechafin_);
        }

    
        /// <summary>
        /// There are no comments for FAddMedicina in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_medicina", IsComposable=true)]
        public void FAddMedicina([Parameter(Name="medicina_", DbType="TEXT")] string medicina_)
        {
            IExecuteResult _FAddMedicinaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicina_);
        }

    
        /// <summary>
        /// There are no comments for Cirugiasreporte in the schema.
        /// </summary>
        [Function(Name=@"hospital.cirugiasreporte", IsComposable=true)]
        public System.Linq.IQueryable<CirugiasreporteResult> Cirugiasreporte([Parameter(Name="id_paciente_", DbType="INTEGER")] System.Nullable<int> id_paciente_)
        {
            return this.CreateMethodCallQuery<CirugiasreporteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_paciente_);
        }

    
        /// <summary>
        /// There are no comments for FAddDoctor3 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_doctor:3", IsComposable=true)]
        public void FAddDoctor3([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_, [Parameter(Name="estado_", DbType="INTEGER")] System.Nullable<int> estado_, [Parameter(Name="correo_", DbType="TEXT")] string correo_, [Parameter(Name="documento_", DbType="TEXT")] string documento_)
        {
            IExecuteResult _FAddDoctor3Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, idrol_, url_, estado_, correo_, documento_);
        }

    
        /// <summary>
        /// There are no comments for FAddAlergia in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_alergia", IsComposable=true)]
        public void FAddAlergia([Parameter(Name="alergia_", DbType="TEXT")] string alergia_)
        {
            IExecuteResult _FAddAlergiaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), alergia_);
        }

    
        /// <summary>
        /// There are no comments for FHvDoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_hv_doctor", IsComposable=true)]
        public System.Linq.IQueryable<FHvDoctorResult> FHvDoctor([Parameter(Name="id_usuario_", DbType="INTEGER")] System.Nullable<int> id_usuario_)
        {
            return this.CreateMethodCallQuery<FHvDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario_);
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctor3 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctor:3", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEditarDoctor3([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="imagen_", DbType="TEXT")] string imagen_, [Parameter(Name="documento_", DbType="TEXT")] string documento_, [Parameter(Name="correo_", DbType="TEXT")] string correo_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_, username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, imagen_, documento_, correo_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_cita", IsComposable=true)]
        public System.Linq.IQueryable<FBuscaCitaResult> FBuscaCita([Parameter(Name="id_user", DbType="INTEGER")] System.Nullable<int> id_user)
        {
            return this.CreateMethodCallQuery<FBuscaCitaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_user);
        }

    
        /// <summary>
        /// There are no comments for Buscarusuarioid in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscarusuarioid", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> Buscarusuarioid([Parameter(Name="_id_user", DbType="INTEGER")] System.Nullable<int> _id_user)
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id_user);
        }

    
        /// <summary>
        /// There are no comments for FAddCitadoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_citadoctor", IsComposable=true)]
        public System.Nullable<System.Boolean> FAddCitadoctor([Parameter(Name="diagnostico_", DbType="TEXT")] string diagnostico_, [Parameter(Name="iddoctor_", DbType="INTEGER")] System.Nullable<int> iddoctor_, [Parameter(Name="idcita_", DbType="INTEGER")] System.Nullable<int> idcita_, [Parameter(Name="idalergia_", DbType="INTEGER")] System.Nullable<int> idalergia_, [Parameter(Name="descripalergia_", DbType="TEXT")] string descripalergia_, [Parameter(Name="cirugia_", DbType="TEXT")] string cirugia_, [Parameter(Name="descripcirugia_", DbType="TEXT")] string descripcirugia_, [Parameter(Name="fechacirugia_", DbType="TEXT")] string fechacirugia_, [Parameter(Name="idmedicina_", DbType="INTEGER")] System.Nullable<int> idmedicina_, [Parameter(Name="dosis_", DbType="INTEGER")] System.Nullable<int> dosis_, [Parameter(Name="fechafinmedicina_", DbType="TEXT")] string fechafinmedicina_)
        {
            IExecuteResult _FAddCitadoctorResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagnostico_, iddoctor_, idcita_, idalergia_, descripalergia_, cirugia_, descripcirugia_, fechacirugia_, idmedicina_, dosis_, fechafinmedicina_);
            return ((System.Nullable<System.Boolean>)(_FAddCitadoctorResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FMuestraParametrizacion in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_muestra_parametrizacion", IsComposable=true)]
        public System.Linq.IQueryable<Parametrizacion> FMuestraParametrizacion()
        {
            return this.CreateMethodCallQuery<Parametrizacion>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FModificarHorario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_modificar_horario", IsComposable=true)]
        public System.Nullable<System.Boolean> FModificarHorario([Parameter(Name="_inicio", DbType="TIMESTAMP WITHOUT TIME ZONE")] System.Nullable<System.DateTime> _inicio, [Parameter(Name="_fin", DbType="TIMESTAMP WITHOUT TIME ZONE")] System.Nullable<System.DateTime> _fin, [Parameter(Name="_dia", DbType="TEXT")] string _dia, [Parameter(Name="id_doctor", DbType="INTEGER")] System.Nullable<int> id_doctor)
        {
            IExecuteResult _FModificarHorarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _inicio, _fin, _dia, id_doctor);
            return ((System.Nullable<System.Boolean>)(_FModificarHorarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for Buscarusuario1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscarusuario:1", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> Buscarusuario1([Parameter(Name="user_", DbType="CHARACTER VARYING")] string user_, [Parameter(Name="clave_", DbType="CHARACTER VARYING")] string clave_)
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_, clave_);
        }

    
        /// <summary>
        /// There are no comments for FAddAlergicita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_alergicita", IsComposable=true)]
        public void FAddAlergicita([Parameter(Name="descripcion", DbType="TEXT")] string descripcion, [Parameter(Name="iduser_", DbType="INTEGER")] System.Nullable<int> iduser_, [Parameter(Name="idcita", DbType="INTEGER")] System.Nullable<int> idcita, [Parameter(Name="idalergia", DbType="INTEGER")] System.Nullable<int> idalergia)
        {
            IExecuteResult _FAddAlergicitaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), descripcion, iduser_, idcita, idalergia);
        }

    
        /// <summary>
        /// There are no comments for FAddCitadoctor2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_citadoctor2", IsComposable=true)]
        public System.Nullable<System.Boolean> FAddCitadoctor2([Parameter(Name="diagnostico_", DbType="TEXT")] string diagnostico_, [Parameter(Name="iddoctor_", DbType="INTEGER")] System.Nullable<int> iddoctor_, [Parameter(Name="idcita_", DbType="INTEGER")] System.Nullable<int> idcita_, [Parameter(Name="idalergia_", DbType="INTEGER")] System.Nullable<int> idalergia_, [Parameter(Name="descripalergia_", DbType="TEXT")] string descripalergia_, [Parameter(Name="idmedicina_", DbType="INTEGER")] System.Nullable<int> idmedicina_, [Parameter(Name="dosis_", DbType="INTEGER")] System.Nullable<int> dosis_, [Parameter(Name="fechafinmedicina_", DbType="TEXT")] string fechafinmedicina_)
        {
            IExecuteResult _FAddCitadoctor2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagnostico_, iddoctor_, idcita_, idalergia_, descripalergia_, idmedicina_, dosis_, fechafinmedicina_);
            return ((System.Nullable<System.Boolean>)(_FAddCitadoctor2Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FGenerarHorario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_generar_horario", IsComposable=true)]
        public System.Nullable<System.Boolean> FGenerarHorario([Parameter(Name="_inicio", DbType="DATE")] System.Nullable<System.DateTime> _inicio, [Parameter(Name="_fin", DbType="DATE")] System.Nullable<System.DateTime> _fin, [Parameter(Name="_horario", DbType="TEXT")] string _horario, [Parameter(Name="id_doctor", DbType="INTEGER")] System.Nullable<int> id_doctor)
        {
            IExecuteResult _FGenerarHorarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _inicio, _fin, _horario, id_doctor);
            return ((System.Nullable<System.Boolean>)(_FGenerarHorarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FCancelarCitasDiaDoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_cancelar_citas_dia_doctor", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FCancelarCitasDiaDoctor([Parameter(Name="id_user", DbType="INTEGER")] System.Nullable<int> id_user, [Parameter(Name="fecha_", DbType="DATE")] System.Nullable<System.DateTime> fecha_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_user, fecha_);
        }

    
        /// <summary>
        /// There are no comments for FAddCitadoctor4 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_citadoctor4", IsComposable=true)]
        public System.Nullable<System.Boolean> FAddCitadoctor4([Parameter(Name="diagnostico_", DbType="TEXT")] string diagnostico_, [Parameter(Name="iddoctor_", DbType="INTEGER")] System.Nullable<int> iddoctor_, [Parameter(Name="idcita_", DbType="INTEGER")] System.Nullable<int> idcita_, [Parameter(Name="idmedicina_", DbType="INTEGER")] System.Nullable<int> idmedicina_, [Parameter(Name="dosis_", DbType="INTEGER")] System.Nullable<int> dosis_, [Parameter(Name="fechafinmedicina_", DbType="TEXT")] string fechafinmedicina_)
        {
            IExecuteResult _FAddCitadoctor4Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagnostico_, iddoctor_, idcita_, idmedicina_, dosis_, fechafinmedicina_);
            return ((System.Nullable<System.Boolean>)(_FAddCitadoctor4Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FBuscaDoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_doctor", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FBuscaDoctor()
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FBuscarcitasUsuariov in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscarcitas_usuariov", IsComposable=true)]
        public System.Linq.IQueryable<FBuscarcitasUsuariovResult> FBuscarcitasUsuariov([Parameter(Name="id_usuario_", DbType="INTEGER")] System.Nullable<int> id_usuario_)
        {
            return this.CreateMethodCallQuery<FBuscarcitasUsuariovResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaDoctorprincipal in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_doctorprincipal", IsComposable=true)]
        public void FBuscaDoctorprincipal()
        {
            IExecuteResult _FBuscaDoctorprincipalResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEditarDoctorv1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_doctorv:1", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEditarDoctorv1([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_, [Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="imagen_", DbType="TEXT")] string imagen_, [Parameter(Name="estado_", DbType="INTEGER")] System.Nullable<int> estado_, [Parameter(Name="documento_", DbType="TEXT")] string documento_, [Parameter(Name="correo_", DbType="TEXT")] string correo_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_, username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, imagen_, estado_, documento_, correo_);
        }

    
        /// <summary>
        /// There are no comments for FAddCirugia2 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_cirugia:2", IsComposable=true)]
        public void FAddCirugia2([Parameter(Name="fecha", DbType="DATE")] System.Nullable<System.DateTime> fecha, [Parameter(Name="descripcion_", DbType="TEXT")] string descripcion_, [Parameter(Name="iduser", DbType="INTEGER")] System.Nullable<int> iduser, [Parameter(Name="idcita", DbType="INTEGER")] System.Nullable<int> idcita, [Parameter(Name="idcirugia", DbType="INTEGER")] System.Nullable<int> idcirugia)
        {
            IExecuteResult _FAddCirugia2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fecha, descripcion_, iduser, idcita, idcirugia);
        }

    
        /// <summary>
        /// There are no comments for Buscartipocita in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscartipocita", IsComposable=true)]
        public System.Linq.IQueryable<Tipo> Buscartipocita()
        {
            return this.CreateMethodCallQuery<Tipo>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FBuscadoc in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscadoc", IsComposable=true)]
        public System.Linq.IQueryable<Usuario> FBuscadoc([Parameter(Name="idusuario_", DbType="INTEGER")] System.Nullable<int> idusuario_)
        {
            return this.CreateMethodCallQuery<Usuario>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idusuario_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaHojaVida in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_hoja_vida", IsComposable=true)]
        public System.Linq.IQueryable<HojaDeVida> FBuscaHojaVida([Parameter(Name="id_user", DbType="INTEGER")] System.Nullable<int> id_user)
        {
            return this.CreateMethodCallQuery<HojaDeVida>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_user);
        }

    
        /// <summary>
        /// There are no comments for Medicamentosreporte in the schema.
        /// </summary>
        [Function(Name=@"hospital.medicamentosreporte", IsComposable=true)]
        public System.Linq.IQueryable<MedicamentosreporteResult> Medicamentosreporte([Parameter(Name="id_paciente_", DbType="INTEGER")] System.Nullable<int> id_paciente_)
        {
            return this.CreateMethodCallQuery<MedicamentosreporteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_paciente_);
        }

    
        /// <summary>
        /// There are no comments for FObtenerCorreo in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_obtener_correo", IsComposable=true)]
        public System.Linq.IQueryable<FObtenerCorreoResult> FObtenerCorreo([Parameter(Name="id_usuario_", DbType="INTEGER")] System.Nullable<int> id_usuario_)
        {
            return this.CreateMethodCallQuery<FObtenerCorreoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaNombreusuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_nombreusuario", IsComposable=true)]
        public void FBuscaNombreusuario()
        {
            IExecuteResult _FBuscaNombreusuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FBuscaAlergia in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_alergias", IsComposable=true)]
        public System.Linq.IQueryable<Alergia> FBuscaAlergia()
        {
            return this.CreateMethodCallQuery<Alergia>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEditarHojavida in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_editar_hojavida", IsComposable=true)]
        public System.Linq.IQueryable<FCancelarCitasHoraDoctorResult> FEditarHojavida([Parameter(Name="id_doc", DbType="INTEGER")] System.Nullable<int> id_doc, [Parameter(Name="perfil_", DbType="TEXT")] string perfil_, [Parameter(Name="bachiller_", DbType="TEXT")] string bachiller_, [Parameter(Name="universidad_", DbType="TEXT")] string universidad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="fellows_", DbType="TEXT")] string fellows_, [Parameter(Name="idiomas_", DbType="TEXT")] string idiomas_, [Parameter(Name="experiencia_", DbType="TEXT")] string experiencia_)
        {
            return this.CreateMethodCallQuery<FCancelarCitasHoraDoctorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doc, perfil_, bachiller_, universidad_, estudios_, fellows_, idiomas_, experiencia_);
        }

    
        /// <summary>
        /// There are no comments for FAddDoctor1 in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_add_doctor:1", IsComposable=true)]
        public void FAddDoctor1([Parameter(Name="username_", DbType="TEXT")] string username_, [Parameter(Name="clave_", DbType="TEXT")] string clave_, [Parameter(Name="nombre_", DbType="TEXT")] string nombre_, [Parameter(Name="apellido_", DbType="TEXT")] string apellido_, [Parameter(Name="edad_", DbType="TEXT")] string edad_, [Parameter(Name="estudios_", DbType="TEXT")] string estudios_, [Parameter(Name="especialidad_", DbType="TEXT")] string especialidad_, [Parameter(Name="idrol_", DbType="INTEGER")] System.Nullable<int> idrol_, [Parameter(Name="url_", DbType="TEXT")] string url_)
        {
            IExecuteResult _FAddDoctor1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username_, clave_, nombre_, apellido_, edad_, estudios_, especialidad_, idrol_, url_);
        }

    
        /// <summary>
        /// There are no comments for FBuscaMedicina in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_medicinas", IsComposable=true)]
        public System.Linq.IQueryable<Medicina> FBuscaMedicina()
        {
            return this.CreateMethodCallQuery<Medicina>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FRegistrarDoctor in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_registrar_doctor")]
        public void FRegistrarDoctor([Parameter(Name="_username", DbType="CHARACTER VARYING")] string _username, [Parameter(Name="_clave", DbType="CHARACTER VARYING")] string _clave, [Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_apellido", DbType="CHARACTER VARYING")] string _apellido, [Parameter(Name="_edad", DbType="INTEGER")] System.Nullable<int> _edad, [Parameter(Name="_estudios", DbType="TEXT")] string _estudios, [Parameter(Name="_especialidad", DbType="TEXT")] string _especialidad, [Parameter(Name="_estado", DbType="INTEGER")] System.Nullable<int> _estado, [Parameter(Name="_email", DbType="CHARACTER VARYING")] string _email, [Parameter(Name="_documento", DbType="CHARACTER VARYING")] string _documento, [Parameter(Name="_url_perfil", DbType="TEXT")] string _url_perfil)
        {
            IExecuteResult _FRegistrarDoctorResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _username, _clave, _nombre, _apellido, _edad, _estudios, _especialidad, _estado, _email, _documento, _url_perfil);
        }

    
        /// <summary>
        /// There are no comments for FCancelarCitaUsuario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_cancelar_cita_usuario", IsComposable=true)]
        public System.Nullable<System.Boolean> FCancelarCitaUsuario([Parameter(Name="id_cita_", DbType="INTEGER")] System.Nullable<int> id_cita_)
        {
            IExecuteResult _FCancelarCitaUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_cita_);
            return ((System.Nullable<System.Boolean>)(_FCancelarCitaUsuarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FRegistrarPaciente in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_registrar_paciente")]
        public void FRegistrarPaciente([Parameter(Name="_username", DbType="CHARACTER VARYING")] string _username, [Parameter(Name="_clave", DbType="CHARACTER VARYING")] string _clave, [Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_apellido", DbType="CHARACTER VARYING")] string _apellido, [Parameter(Name="_edad", DbType="INTEGER")] System.Nullable<int> _edad, [Parameter(Name="_tiposangre", DbType="TEXT")] string _tiposangre, [Parameter(Name="_email", DbType="CHARACTER VARYING")] string _email, [Parameter(Name="_documento", DbType="CHARACTER VARYING")] string _documento, [Parameter(Name="_fechaexamen", DbType="CHARACTER VARYING")] string _fechaexamen, [Parameter(Name="_imagen", DbType="TEXT")] string _imagen)
        {
            IExecuteResult _FRegistrarPacienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _username, _clave, _nombre, _apellido, _edad, _tiposangre, _email, _documento, _fechaexamen, _imagen);
        }

    
        /// <summary>
        /// There are no comments for Buscarcita in the schema.
        /// </summary>
        [Function(Name=@"hospital.buscarcita", IsComposable=true)]
        public System.Linq.IQueryable<Mostrarcitasvistaid> Buscarcita([Parameter(Name="id_paciente_", DbType="INTEGER")] System.Nullable<int> id_paciente_)
        {
            return this.CreateMethodCallQuery<Mostrarcitasvistaid>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_paciente_);
        }

    
        /// <summary>
        /// There are no comments for FSacarCita in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_sacar_cita", IsComposable=true)]
        public System.Nullable<System.Boolean> FSacarCita([Parameter(Name="id_usuario_", DbType="INTEGER")] System.Nullable<int> id_usuario_, [Parameter(Name="id_cita_", DbType="INTEGER")] System.Nullable<int> id_cita_)
        {
            IExecuteResult _FSacarCitaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_usuario_, id_cita_);
            return ((System.Nullable<System.Boolean>)(_FSacarCitaResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FEditaTiempo in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_edita_tiempo")]
        public void FEditaTiempo([Parameter(Name="_id_horario", DbType="INTEGER")] System.Nullable<int> _id_horario, [Parameter(Name="_duracion_citas", DbType="TEXT")] string _duracion_citas, [Parameter(Name="_hora_inicio", DbType="TEXT")] string _hora_inicio, [Parameter(Name="_hora_fin", DbType="TEXT")] string _hora_fin)
        {
            IExecuteResult _FEditaTiempoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id_horario, _duracion_citas, _hora_inicio, _hora_fin);
        }

    
        /// <summary>
        /// There are no comments for FBuscaHorario in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_busca_horario", IsComposable=true)]
        public System.Linq.IQueryable<FBuscaHorarioResult> FBuscaHorario([Parameter(Name="id_doctor", DbType="INTEGER")] System.Nullable<int> id_doctor)
        {
            return this.CreateMethodCallQuery<FBuscaHorarioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_doctor);
        }

    
        /// <summary>
        /// There are no comments for FObtenerFecha in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_obtener_fechas", IsComposable=true)]
        public System.Linq.IQueryable<FObtenerFechaResult> FObtenerFecha()
        {
            return this.CreateMethodCallQuery<FObtenerFechaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FVerMedicina in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_ver_medicinas", IsComposable=true)]
        public System.Linq.IQueryable<Medicina> FVerMedicina()
        {
            return this.CreateMethodCallQuery<Medicina>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FBuscarCitaD in the schema.
        /// </summary>
        [Function(Name=@"hospital.f_buscar_cita_d", IsComposable=true)]
        public System.Linq.IQueryable<FBuscarCitaDResult> FBuscarCitaD([Parameter(Name="fecha", DbType="DATE")] System.Nullable<System.DateTime> fecha)
        {
            return this.CreateMethodCallQuery<FBuscarCitaDResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fecha);
        }
    }
}

namespace Medicapp13Context
{

    /// <summary>
    /// There are no comments for Medicapp13Context.Medicina in the schema.
    /// </summary>
    [Table(Name = @"hospital.medicinas")]
    public partial class Medicina : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdMedicina;

        private string _NombreMedicina;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdMedicinaChanging(int value);
        partial void OnIdMedicinaChanged();
        partial void OnNombreMedicinaChanging(string value);
        partial void OnNombreMedicinaChanged();
        #endregion

        public Medicina()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdMedicina in the schema.
        /// </summary>
        [Column(Name = @"id_medicina", Storage = "_IdMedicina", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdMedicina
        {
            get
            {
                return this._IdMedicina;
            }
            set
            {
                if (this._IdMedicina != value)
                {
                    this.OnIdMedicinaChanging(value);
                    this.SendPropertyChanging("IdMedicina");
                    this._IdMedicina = value;
                    this.SendPropertyChanged("IdMedicina");
                    this.OnIdMedicinaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreMedicina in the schema.
        /// </summary>
        [Column(Name = @"nombre_medicina", Storage = "_NombreMedicina", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NombreMedicina
        {
            get
            {
                return this._NombreMedicina;
            }
            set
            {
                if (this._NombreMedicina != value)
                {
                    this.OnNombreMedicinaChanging(value);
                    this.SendPropertyChanging("NombreMedicina");
                    this._NombreMedicina = value;
                    this.SendPropertyChanged("NombreMedicina");
                    this.OnNombreMedicinaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Tipo in the schema.
    /// </summary>
    [Table(Name = @"hospital.tipo")]
    public partial class Tipo : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdTipo;

        private string _Tipo1;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdTipoChanging(int value);
        partial void OnIdTipoChanged();
        partial void OnTipo1Changing(string value);
        partial void OnTipo1Changed();
        #endregion

        public Tipo()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdTipo in the schema.
        /// </summary>
        [Column(Name = @"id_tipo", Storage = "_IdTipo", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdTipo
        {
            get
            {
                return this._IdTipo;
            }
            set
            {
                if (this._IdTipo != value)
                {
                    this.OnIdTipoChanging(value);
                    this.SendPropertyChanging("IdTipo");
                    this._IdTipo = value;
                    this.SendPropertyChanged("IdTipo");
                    this.OnIdTipoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo1 in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo1", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Tipo1
        {
            get
            {
                return this._Tipo1;
            }
            set
            {
                if (this._Tipo1 != value)
                {
                    this.OnTipo1Changing(value);
                    this.SendPropertyChanging("Tipo1");
                    this._Tipo1 = value;
                    this.SendPropertyChanged("Tipo1");
                    this.OnTipo1Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Alergia in the schema.
    /// </summary>
    [Table(Name = @"hospital.alergia")]
    public partial class Alergia : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdAlergia;

        private string _NombreAlergia;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdAlergiaChanging(int value);
        partial void OnIdAlergiaChanged();
        partial void OnNombreAlergiaChanging(string value);
        partial void OnNombreAlergiaChanged();
        #endregion

        public Alergia()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdAlergia in the schema.
        /// </summary>
        [Column(Name = @"id_alergia", Storage = "_IdAlergia", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdAlergia
        {
            get
            {
                return this._IdAlergia;
            }
            set
            {
                if (this._IdAlergia != value)
                {
                    this.OnIdAlergiaChanging(value);
                    this.SendPropertyChanging("IdAlergia");
                    this._IdAlergia = value;
                    this.SendPropertyChanged("IdAlergia");
                    this.OnIdAlergiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreAlergia in the schema.
        /// </summary>
        [Column(Name = @"nombre_alergia", Storage = "_NombreAlergia", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NombreAlergia
        {
            get
            {
                return this._NombreAlergia;
            }
            set
            {
                if (this._NombreAlergia != value)
                {
                    this.OnNombreAlergiaChanging(value);
                    this.SendPropertyChanging("NombreAlergia");
                    this._NombreAlergia = value;
                    this.SendPropertyChanged("NombreAlergia");
                    this.OnNombreAlergiaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Parametrizacion in the schema.
    /// </summary>
    [Table(Name = @"hospital.parametrizacion")]
    public partial class Parametrizacion : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdParemetrizacion;

        private System.Nullable<System.TimeSpan> _DuracionCitas;

        private System.Nullable<System.TimeSpan> _HoraInicio;

        private System.Nullable<System.TimeSpan> _HoraFin;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdParemetrizacionChanging(int value);
        partial void OnIdParemetrizacionChanged();
        partial void OnDuracionCitasChanging(System.Nullable<System.TimeSpan> value);
        partial void OnDuracionCitasChanged();
        partial void OnHoraInicioChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraInicioChanged();
        partial void OnHoraFinChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraFinChanged();
        #endregion

        public Parametrizacion()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdParemetrizacion in the schema.
        /// </summary>
        [Column(Name = @"id_paremetrizacion", Storage = "_IdParemetrizacion", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdParemetrizacion
        {
            get
            {
                return this._IdParemetrizacion;
            }
            set
            {
                if (this._IdParemetrizacion != value)
                {
                    this.OnIdParemetrizacionChanging(value);
                    this.SendPropertyChanging("IdParemetrizacion");
                    this._IdParemetrizacion = value;
                    this.SendPropertyChanged("IdParemetrizacion");
                    this.OnIdParemetrizacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DuracionCitas in the schema.
        /// </summary>
        [Column(Name = @"duracion_citas", Storage = "_DuracionCitas", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> DuracionCitas
        {
            get
            {
                return this._DuracionCitas;
            }
            set
            {
                if (this._DuracionCitas != value)
                {
                    this.OnDuracionCitasChanging(value);
                    this.SendPropertyChanging("DuracionCitas");
                    this._DuracionCitas = value;
                    this.SendPropertyChanged("DuracionCitas");
                    this.OnDuracionCitasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// hora para iniciar a hacer citas
        /// 
        /// 
        /// </summary>
        [Column(Name = @"hora_fin", Storage = "_HoraFin", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraFin
        {
            get
            {
                return this._HoraFin;
            }
            set
            {
                if (this._HoraFin != value)
                {
                    this.OnHoraFinChanging(value);
                    this.SendPropertyChanging("HoraFin");
                    this._HoraFin = value;
                    this.SendPropertyChanged("HoraFin");
                    this.OnHoraFinChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.HojaDeVida in the schema.
    /// </summary>
    [Table(Name = @"hospital.hoja_de_vida")]
    public partial class HojaDeVida : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdHv;

        private string _PerfilProfesional;

        private string _Bachiller;

        private string _Universidad;

        private string _OtrosEstudios;

        private string _Fellows;

        private string _Idiomas;

        private string _Experiencia;

        private int _IdDoctor;
        #pragma warning restore 0649

        private EntityRef<Usuario> _Usuario;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdHvChanging(int value);
        partial void OnIdHvChanged();
        partial void OnPerfilProfesionalChanging(string value);
        partial void OnPerfilProfesionalChanged();
        partial void OnBachillerChanging(string value);
        partial void OnBachillerChanged();
        partial void OnUniversidadChanging(string value);
        partial void OnUniversidadChanged();
        partial void OnOtrosEstudiosChanging(string value);
        partial void OnOtrosEstudiosChanged();
        partial void OnFellowsChanging(string value);
        partial void OnFellowsChanged();
        partial void OnIdiomasChanging(string value);
        partial void OnIdiomasChanged();
        partial void OnExperienciaChanging(string value);
        partial void OnExperienciaChanged();
        partial void OnIdDoctorChanging(int value);
        partial void OnIdDoctorChanged();
        #endregion

        public HojaDeVida()
        {
            this._Usuario  = default(EntityRef<Usuario>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdHv in the schema.
        /// </summary>
        [Column(Name = @"id_hv", Storage = "_IdHv", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdHv
        {
            get
            {
                return this._IdHv;
            }
            set
            {
                if (this._IdHv != value)
                {
                    this.OnIdHvChanging(value);
                    this.SendPropertyChanging("IdHv");
                    this._IdHv = value;
                    this.SendPropertyChanged("IdHv");
                    this.OnIdHvChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PerfilProfesional in the schema.
        /// </summary>
        [Column(Name = @"perfil_profesional", Storage = "_PerfilProfesional", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PerfilProfesional
        {
            get
            {
                return this._PerfilProfesional;
            }
            set
            {
                if (this._PerfilProfesional != value)
                {
                    this.OnPerfilProfesionalChanging(value);
                    this.SendPropertyChanging("PerfilProfesional");
                    this._PerfilProfesional = value;
                    this.SendPropertyChanged("PerfilProfesional");
                    this.OnPerfilProfesionalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Bachiller in the schema.
        /// </summary>
        [Column(Name = @"bachiller", Storage = "_Bachiller", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Bachiller
        {
            get
            {
                return this._Bachiller;
            }
            set
            {
                if (this._Bachiller != value)
                {
                    this.OnBachillerChanging(value);
                    this.SendPropertyChanging("Bachiller");
                    this._Bachiller = value;
                    this.SendPropertyChanged("Bachiller");
                    this.OnBachillerChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Universidad in the schema.
        /// </summary>
        [Column(Name = @"universidad", Storage = "_Universidad", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Universidad
        {
            get
            {
                return this._Universidad;
            }
            set
            {
                if (this._Universidad != value)
                {
                    this.OnUniversidadChanging(value);
                    this.SendPropertyChanging("Universidad");
                    this._Universidad = value;
                    this.SendPropertyChanged("Universidad");
                    this.OnUniversidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OtrosEstudios in the schema.
        /// </summary>
        [Column(Name = @"otros_estudios", Storage = "_OtrosEstudios", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string OtrosEstudios
        {
            get
            {
                return this._OtrosEstudios;
            }
            set
            {
                if (this._OtrosEstudios != value)
                {
                    this.OnOtrosEstudiosChanging(value);
                    this.SendPropertyChanging("OtrosEstudios");
                    this._OtrosEstudios = value;
                    this.SendPropertyChanged("OtrosEstudios");
                    this.OnOtrosEstudiosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fellows in the schema.
        /// </summary>
        [Column(Name = @"fellows", Storage = "_Fellows", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Fellows
        {
            get
            {
                return this._Fellows;
            }
            set
            {
                if (this._Fellows != value)
                {
                    this.OnFellowsChanging(value);
                    this.SendPropertyChanging("Fellows");
                    this._Fellows = value;
                    this.SendPropertyChanged("Fellows");
                    this.OnFellowsChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Idiomas in the schema.
        /// </summary>
        [Column(Name = @"idiomas", Storage = "_Idiomas", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Idiomas
        {
            get
            {
                return this._Idiomas;
            }
            set
            {
                if (this._Idiomas != value)
                {
                    this.OnIdiomasChanging(value);
                    this.SendPropertyChanging("Idiomas");
                    this._Idiomas = value;
                    this.SendPropertyChanged("Idiomas");
                    this.OnIdiomasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Experiencia in the schema.
        /// </summary>
        [Column(Name = @"experiencia", Storage = "_Experiencia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Experiencia
        {
            get
            {
                return this._Experiencia;
            }
            set
            {
                if (this._Experiencia != value)
                {
                    this.OnExperienciaChanging(value);
                    this.SendPropertyChanging("Experiencia");
                    this._Experiencia = value;
                    this.SendPropertyChanged("Experiencia");
                    this.OnExperienciaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdDoctor in the schema.
        /// </summary>
        [Column(Name = @"id_doctor", Storage = "_IdDoctor", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int IdDoctor
        {
            get
            {
                return this._IdDoctor;
            }
            set
            {
                if (this._IdDoctor != value)
                {
                    if (this._Usuario.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIdDoctorChanging(value);
                    this.SendPropertyChanging("IdDoctor");
                    this._IdDoctor = value;
                    this.SendPropertyChanged("IdDoctor");
                    this.OnIdDoctorChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Usuario in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Usuario_HojaDeVida", Storage="_Usuario", ThisKey="IdDoctor", OtherKey="IdUsuario", IsForeignKey=true)]
        public Usuario Usuario
        {
            get
            {
                return this._Usuario.Entity;
            }
            set
            {
                Usuario previousValue = this._Usuario.Entity;
                if ((previousValue != value) || (this._Usuario.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Usuario");
                    if (previousValue != null)
                    {
                        this._Usuario.Entity = null;
                        previousValue.HojaDeVidas.Remove(this);
                    }
                    this._Usuario.Entity = value;
                    if (value != null)
                    {
                        this._IdDoctor = value.IdUsuario;
                        value.HojaDeVidas.Add(this);
                    }
                    else
                    {
                        this._IdDoctor = default(int);
                    }
                    this.SendPropertyChanged("Usuario");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Alergicita in the schema.
    /// </summary>
    [Table(Name = @"hospital.alergicita")]
    public partial class Alergicita : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdAlergias;

        private string _DescripcionAlergia;

        private int _IdUser;

        private int _IdCita;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdAlergiasChanging(int value);
        partial void OnIdAlergiasChanged();
        partial void OnDescripcionAlergiaChanging(string value);
        partial void OnDescripcionAlergiaChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnIdCitaChanging(int value);
        partial void OnIdCitaChanged();
        #endregion

        public Alergicita()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdAlergias in the schema.
        /// </summary>
        [Column(Name = @"id_alergias", Storage = "_IdAlergias", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdAlergias
        {
            get
            {
                return this._IdAlergias;
            }
            set
            {
                if (this._IdAlergias != value)
                {
                    this.OnIdAlergiasChanging(value);
                    this.SendPropertyChanging("IdAlergias");
                    this._IdAlergias = value;
                    this.SendPropertyChanged("IdAlergias");
                    this.OnIdAlergiasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DescripcionAlergia in the schema.
        /// </summary>
        [Column(Name = @"descripcion_alergia", Storage = "_DescripcionAlergia", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DescripcionAlergia
        {
            get
            {
                return this._DescripcionAlergia;
            }
            set
            {
                if (this._DescripcionAlergia != value)
                {
                    this.OnDescripcionAlergiaChanging(value);
                    this.SendPropertyChanging("DescripcionAlergia");
                    this._DescripcionAlergia = value;
                    this.SendPropertyChanged("DescripcionAlergia");
                    this.OnDescripcionAlergiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUser in the schema.
        /// </summary>
        [Column(Name = @"id_user", Storage = "_IdUser", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if (this._IdUser != value)
                {
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging("IdUser");
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Cirucita in the schema.
    /// </summary>
    [Table(Name = @"hospital.cirucitas")]
    public partial class Cirucita : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdCirucitas;

        private System.Nullable<System.DateTime> _Fecha;

        private string _Descripcion;

        private System.Nullable<int> _IdUsuario;

        private System.Nullable<int> _IdCita;

        private System.Nullable<int> _IdCirugia;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdCirucitasChanging(int value);
        partial void OnIdCirucitasChanged();
        partial void OnFechaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        partial void OnIdCitaChanging(System.Nullable<int> value);
        partial void OnIdCitaChanged();
        partial void OnIdCirugiaChanging(System.Nullable<int> value);
        partial void OnIdCirugiaChanged();
        #endregion

        public Cirucita()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdCirucitas in the schema.
        /// </summary>
        [Column(Name = @"id_cirucitas", Storage = "_IdCirucitas", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdCirucitas
        {
            get
            {
                return this._IdCirucitas;
            }
            set
            {
                if (this._IdCirucitas != value)
                {
                    this.OnIdCirucitasChanging(value);
                    this.SendPropertyChanging("IdCirucitas");
                    this._IdCirucitas = value;
                    this.SendPropertyChanged("IdCirucitas");
                    this.OnIdCirucitasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"fecha", Storage = "_Fecha", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdCirugia in the schema.
        /// </summary>
        [Column(Name = @"id_cirugia", Storage = "_IdCirugia", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCirugia
        {
            get
            {
                return this._IdCirugia;
            }
            set
            {
                if (this._IdCirugia != value)
                {
                    this.OnIdCirugiaChanging(value);
                    this.SendPropertyChanging("IdCirugia");
                    this._IdCirugia = value;
                    this.SendPropertyChanged("IdCirugia");
                    this.OnIdCirugiaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// tabla intermedia entre cita y medicinas
    /// </summary>
    [Table(Name = @"hospital.medicita")]
    public partial class Medicita : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdMedicita;

        private System.Nullable<int> _IdMedicina;

        private System.Nullable<int> _IdUsuario;

        private string _Dosis;

        private System.Nullable<System.DateTime> _FechaInicio;

        private System.Nullable<int> _IdCita;

        private string _FechaFin;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdMedicitaChanging(int value);
        partial void OnIdMedicitaChanged();
        partial void OnIdMedicinaChanging(System.Nullable<int> value);
        partial void OnIdMedicinaChanged();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        partial void OnDosisChanging(string value);
        partial void OnDosisChanged();
        partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaInicioChanged();
        partial void OnIdCitaChanging(System.Nullable<int> value);
        partial void OnIdCitaChanged();
        partial void OnFechaFinChanging(string value);
        partial void OnFechaFinChanged();
        #endregion

        public Medicita()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdMedicita in the schema.
        /// </summary>
        [Column(Name = @"id_medicita", Storage = "_IdMedicita", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdMedicita
        {
            get
            {
                return this._IdMedicita;
            }
            set
            {
                if (this._IdMedicita != value)
                {
                    this.OnIdMedicitaChanging(value);
                    this.SendPropertyChanging("IdMedicita");
                    this._IdMedicita = value;
                    this.SendPropertyChanged("IdMedicita");
                    this.OnIdMedicitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdMedicina in the schema.
        /// </summary>
        [Column(Name = @"id_medicina", Storage = "_IdMedicina", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdMedicina
        {
            get
            {
                return this._IdMedicina;
            }
            set
            {
                if (this._IdMedicina != value)
                {
                    this.OnIdMedicinaChanging(value);
                    this.SendPropertyChanging("IdMedicina");
                    this._IdMedicina = value;
                    this.SendPropertyChanged("IdMedicina");
                    this.OnIdMedicinaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Dosis in the schema.
        /// </summary>
        [Column(Name = @"dosis", Storage = "_Dosis", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Dosis
        {
            get
            {
                return this._Dosis;
            }
            set
            {
                if (this._Dosis != value)
                {
                    this.OnDosisChanging(value);
                    this.SendPropertyChanging("Dosis");
                    this._Dosis = value;
                    this.SendPropertyChanged("Dosis");
                    this.OnDosisChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaInicio in the schema.
        /// </summary>
        [Column(Name = @"fecha_inicio", Storage = "_FechaInicio", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaInicio
        {
            get
            {
                return this._FechaInicio;
            }
            set
            {
                if (this._FechaInicio != value)
                {
                    this.OnFechaInicioChanging(value);
                    this.SendPropertyChanging("FechaInicio");
                    this._FechaInicio = value;
                    this.SendPropertyChanged("FechaInicio");
                    this.OnFechaInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaFin in the schema.
        /// </summary>
        [Column(Name = @"fecha_fin", Storage = "_FechaFin", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string FechaFin
        {
            get
            {
                return this._FechaFin;
            }
            set
            {
                if (this._FechaFin != value)
                {
                    this.OnFechaFinChanging(value);
                    this.SendPropertyChanging("FechaFin");
                    this._FechaFin = value;
                    this.SendPropertyChanged("FechaFin");
                    this.OnFechaFinChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Horario in the schema.
    /// </summary>
    [Table(Name = @"hospital.horario")]
    public partial class Horario : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdHorario;

        private System.DateTime _FechaInicio;

        private System.DateTime _FechaFin;

        private System.Nullable<int> _IdUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdHorarioChanging(int value);
        partial void OnIdHorarioChanged();
        partial void OnFechaInicioChanging(System.DateTime value);
        partial void OnFechaInicioChanged();
        partial void OnFechaFinChanging(System.DateTime value);
        partial void OnFechaFinChanged();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        #endregion

        public Horario()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdHorario in the schema.
        /// </summary>
        [Column(Name = @"id_horario", Storage = "_IdHorario", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdHorario
        {
            get
            {
                return this._IdHorario;
            }
            set
            {
                if (this._IdHorario != value)
                {
                    this.OnIdHorarioChanging(value);
                    this.SendPropertyChanging("IdHorario");
                    this._IdHorario = value;
                    this.SendPropertyChanged("IdHorario");
                    this.OnIdHorarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaInicio in the schema.
        /// </summary>
        [Column(Name = @"fecha_inicio", Storage = "_FechaInicio", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime FechaInicio
        {
            get
            {
                return this._FechaInicio;
            }
            set
            {
                if (this._FechaInicio != value)
                {
                    this.OnFechaInicioChanging(value);
                    this.SendPropertyChanging("FechaInicio");
                    this._FechaInicio = value;
                    this.SendPropertyChanged("FechaInicio");
                    this.OnFechaInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaFin in the schema.
        /// </summary>
        [Column(Name = @"fecha_fin", Storage = "_FechaFin", CanBeNull = false, DbType = "TIMESTAMP NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime FechaFin
        {
            get
            {
                return this._FechaFin;
            }
            set
            {
                if (this._FechaFin != value)
                {
                    this.OnFechaFinChanging(value);
                    this.SendPropertyChanging("FechaFin");
                    this._FechaFin = value;
                    this.SendPropertyChanged("FechaFin");
                    this.OnFechaFinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Cita in the schema.
    /// </summary>
    [Table(Name = @"hospital.cita")]
    public partial class Cita : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdCita;

        private System.Nullable<int> _DoctorId;

        private string _Diagnostico;

        private System.Nullable<int> _PacienteId;

        private System.Nullable<System.DateTime> _HoraInicio;

        private System.Nullable<System.DateTime> _HoraFin;

        private System.Nullable<int> _Estado = 0;

        private string _Tipo;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdCitaChanging(int value);
        partial void OnIdCitaChanged();
        partial void OnDoctorIdChanging(System.Nullable<int> value);
        partial void OnDoctorIdChanged();
        partial void OnDiagnosticoChanging(string value);
        partial void OnDiagnosticoChanged();
        partial void OnPacienteIdChanging(System.Nullable<int> value);
        partial void OnPacienteIdChanged();
        partial void OnHoraInicioChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraInicioChanged();
        partial void OnHoraFinChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraFinChanged();
        partial void OnEstadoChanging(System.Nullable<int> value);
        partial void OnEstadoChanged();
        partial void OnTipoChanging(string value);
        partial void OnTipoChanged();
        #endregion

        public Cita()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DoctorId in the schema.
        /// </summary>
        [Column(Name = @"doctor_id", Storage = "_DoctorId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> DoctorId
        {
            get
            {
                return this._DoctorId;
            }
            set
            {
                if (this._DoctorId != value)
                {
                    this.OnDoctorIdChanging(value);
                    this.SendPropertyChanging("DoctorId");
                    this._DoctorId = value;
                    this.SendPropertyChanged("DoctorId");
                    this.OnDoctorIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Diagnostico in the schema.
        /// </summary>
        [Column(Name = @"diagnostico", Storage = "_Diagnostico", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Diagnostico
        {
            get
            {
                return this._Diagnostico;
            }
            set
            {
                if (this._Diagnostico != value)
                {
                    this.OnDiagnosticoChanging(value);
                    this.SendPropertyChanging("Diagnostico");
                    this._Diagnostico = value;
                    this.SendPropertyChanged("Diagnostico");
                    this.OnDiagnosticoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PacienteId in the schema.
        /// </summary>
        [Column(Name = @"paciente_id", Storage = "_PacienteId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PacienteId
        {
            get
            {
                return this._PacienteId;
            }
            set
            {
                if (this._PacienteId != value)
                {
                    this.OnPacienteIdChanging(value);
                    this.SendPropertyChanging("PacienteId");
                    this._PacienteId = value;
                    this.SendPropertyChanged("PacienteId");
                    this.OnPacienteIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFin in the schema.
        /// </summary>
        [Column(Name = @"hora_fin", Storage = "_HoraFin", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraFin
        {
            get
            {
                return this._HoraFin;
            }
            set
            {
                if (this._HoraFin != value)
                {
                    this.OnHoraFinChanging(value);
                    this.SendPropertyChanging("HoraFin");
                    this._HoraFin = value;
                    this.SendPropertyChanged("HoraFin");
                    this.OnHoraFinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [Column(Name = @"estado", Storage = "_Estado", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Estado
        {
            get
            {
                return this._Estado;
            }
            set
            {
                if (this._Estado != value)
                {
                    this.OnEstadoChanging(value);
                    this.SendPropertyChanging("Estado");
                    this._Estado = value;
                    this.SendPropertyChanged("Estado");
                    this.OnEstadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Tipo
        {
            get
            {
                return this._Tipo;
            }
            set
            {
                if (this._Tipo != value)
                {
                    this.OnTipoChanging(value);
                    this.SendPropertyChanging("Tipo");
                    this._Tipo = value;
                    this.SendPropertyChanged("Tipo");
                    this.OnTipoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Cirugia in the schema.
    /// </summary>
    [Table(Name = @"hospital.cirugias")]
    public partial class Cirugia : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdCirugia;

        private string _NombreCirugia;

        private string _Descripcion;

        private System.Nullable<int> _IdUser;

        private string _FechaCirugia;
        #pragma warning restore 0649

        private EntityRef<Usuario> _Usuario;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdCirugiaChanging(int value);
        partial void OnIdCirugiaChanged();
        partial void OnNombreCirugiaChanging(string value);
        partial void OnNombreCirugiaChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnIdUserChanging(System.Nullable<int> value);
        partial void OnIdUserChanged();
        partial void OnFechaCirugiaChanging(string value);
        partial void OnFechaCirugiaChanged();
        #endregion

        public Cirugia()
        {
            this._Usuario  = default(EntityRef<Usuario>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdCirugia in the schema.
        /// </summary>
        [Column(Name = @"id_cirugia", Storage = "_IdCirugia", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdCirugia
        {
            get
            {
                return this._IdCirugia;
            }
            set
            {
                if (this._IdCirugia != value)
                {
                    this.OnIdCirugiaChanging(value);
                    this.SendPropertyChanging("IdCirugia");
                    this._IdCirugia = value;
                    this.SendPropertyChanged("IdCirugia");
                    this.OnIdCirugiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreCirugia in the schema.
        /// </summary>
        [Column(Name = @"nombre_cirugia", Storage = "_NombreCirugia", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NombreCirugia
        {
            get
            {
                return this._NombreCirugia;
            }
            set
            {
                if (this._NombreCirugia != value)
                {
                    this.OnNombreCirugiaChanging(value);
                    this.SendPropertyChanging("NombreCirugia");
                    this._NombreCirugia = value;
                    this.SendPropertyChanged("NombreCirugia");
                    this.OnNombreCirugiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUser in the schema.
        /// </summary>
        [Column(Name = @"id_user", Storage = "_IdUser", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if (this._IdUser != value)
                {
                    if (this._Usuario.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging("IdUser");
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaCirugia in the schema.
        /// </summary>
        [Column(Name = @"fecha_cirugia", Storage = "_FechaCirugia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string FechaCirugia
        {
            get
            {
                return this._FechaCirugia;
            }
            set
            {
                if (this._FechaCirugia != value)
                {
                    this.OnFechaCirugiaChanging(value);
                    this.SendPropertyChanging("FechaCirugia");
                    this._FechaCirugia = value;
                    this.SendPropertyChanged("FechaCirugia");
                    this.OnFechaCirugiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Usuario in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Usuario_Cirugia", Storage="_Usuario", ThisKey="IdUser", OtherKey="IdUsuario", IsForeignKey=true)]
        public Usuario Usuario
        {
            get
            {
                return this._Usuario.Entity;
            }
            set
            {
                Usuario previousValue = this._Usuario.Entity;
                if ((previousValue != value) || (this._Usuario.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Usuario");
                    if (previousValue != null)
                    {
                        this._Usuario.Entity = null;
                        previousValue.Cirugias.Remove(this);
                    }
                    this._Usuario.Entity = value;
                    if (value != null)
                    {
                        this._IdUser = value.IdUsuario;
                        value.Cirugias.Add(this);
                    }
                    else
                    {
                        this._IdUser = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Usuario");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Rol in the schema.
    /// </summary>
    [Table(Name = @"hospital.rol")]
    public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdRol;

        private string _NombreRol;
        #pragma warning restore 0649

        private EntitySet<Usuario> _Usuarios;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdRolChanging(int value);
        partial void OnIdRolChanged();
        partial void OnNombreRolChanging(string value);
        partial void OnNombreRolChanged();
        #endregion

        public Rol()
        {
            this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdRol in the schema.
        /// </summary>
        [Column(Name = @"id_rol", Storage = "_IdRol", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdRol
        {
            get
            {
                return this._IdRol;
            }
            set
            {
                if (this._IdRol != value)
                {
                    this.OnIdRolChanging(value);
                    this.SendPropertyChanging("IdRol");
                    this._IdRol = value;
                    this.SendPropertyChanged("IdRol");
                    this.OnIdRolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreRol in the schema.
        /// </summary>
        [Column(Name = @"nombre_rol", Storage = "_NombreRol", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NombreRol
        {
            get
            {
                return this._NombreRol;
            }
            set
            {
                if (this._NombreRol != value)
                {
                    this.OnNombreRolChanging(value);
                    this.SendPropertyChanging("NombreRol");
                    this._NombreRol = value;
                    this.SendPropertyChanged("NombreRol");
                    this.OnNombreRolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Usuarios in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Usuario", Storage="_Usuarios", ThisKey="IdRol", OtherKey="IdRol", DeleteRule="NO ACTION")]
        public EntitySet<Usuario> Usuarios
        {
            get
            {
                return this._Usuarios;
            }
            set
            {
                this._Usuarios.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Usuarios(Usuario entity)
        {
            this.SendPropertyChanging("Usuarios");
            entity.Rol = this;
        }
    
        private void detach_Usuarios(Usuario entity)
        {
            this.SendPropertyChanging("Usuarios");
            entity.Rol = null;
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Usuario in the schema.
    /// </summary>
    [Table(Name = @"hospital.usuario")]
    public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _IdUsuario;

        private string _Username;

        private string _Clave;

        private string _Nombre;

        private string _Apellido;

        private string _Edad;

        private string _TipoDeSangre;

        private string _Estudios;

        private string _Especialidad;

        private System.Nullable<int> _IdRol;

        private string _Ip;

        private string _Mac;

        private string _Imagen;

        private System.Nullable<System.DateTime> _FechaDeUltimoExamen;

        private string _Correo;

        private string _Documento;

        private System.Nullable<int> _Estado;
        #pragma warning restore 0649

        private EntitySet<HojaDeVida> _HojaDeVidas;

        private EntitySet<Cirugia> _Cirugias;

        private EntityRef<Rol> _Rol;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdUsuarioChanging(int value);
        partial void OnIdUsuarioChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnClaveChanging(string value);
        partial void OnClaveChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnEstudiosChanging(string value);
        partial void OnEstudiosChanged();
        partial void OnEspecialidadChanging(string value);
        partial void OnEspecialidadChanged();
        partial void OnIdRolChanging(System.Nullable<int> value);
        partial void OnIdRolChanged();
        partial void OnIpChanging(string value);
        partial void OnIpChanged();
        partial void OnMacChanging(string value);
        partial void OnMacChanged();
        partial void OnImagenChanging(string value);
        partial void OnImagenChanged();
        partial void OnFechaDeUltimoExamenChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDeUltimoExamenChanged();
        partial void OnCorreoChanging(string value);
        partial void OnCorreoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        partial void OnEstadoChanging(System.Nullable<int> value);
        partial void OnEstadoChanged();
        #endregion

        public Usuario()
        {
            this._HojaDeVidas = new EntitySet<HojaDeVida>(new Action<HojaDeVida>(this.attach_HojaDeVidas), new Action<HojaDeVida>(this.detach_HojaDeVidas));
            this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
            this._Rol  = default(EntityRef<Rol>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Username in the schema.
        /// </summary>
        [Column(Name = @"username", Storage = "_Username", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if (this._Username != value)
                {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging("Username");
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Clave in the schema.
        /// </summary>
        [Column(Name = @"clave", Storage = "_Clave", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Clave
        {
            get
            {
                return this._Clave;
            }
            set
            {
                if (this._Clave != value)
                {
                    this.OnClaveChanging(value);
                    this.SendPropertyChanging("Clave");
                    this._Clave = value;
                    this.SendPropertyChanged("Clave");
                    this.OnClaveChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", CanBeNull = false, DbType = "TEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Estudios in the schema.
        /// </summary>
        [Column(Name = @"estudios", Storage = "_Estudios", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Estudios
        {
            get
            {
                return this._Estudios;
            }
            set
            {
                if (this._Estudios != value)
                {
                    this.OnEstudiosChanging(value);
                    this.SendPropertyChanging("Estudios");
                    this._Estudios = value;
                    this.SendPropertyChanged("Estudios");
                    this.OnEstudiosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Especialidad in the schema.
        /// </summary>
        [Column(Name = @"especialidad", Storage = "_Especialidad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Especialidad
        {
            get
            {
                return this._Especialidad;
            }
            set
            {
                if (this._Especialidad != value)
                {
                    this.OnEspecialidadChanging(value);
                    this.SendPropertyChanging("Especialidad");
                    this._Especialidad = value;
                    this.SendPropertyChanged("Especialidad");
                    this.OnEspecialidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdRol in the schema.
        /// </summary>
        [Column(Name = @"id_rol", Storage = "_IdRol", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdRol
        {
            get
            {
                return this._IdRol;
            }
            set
            {
                if (this._IdRol != value)
                {
                    if (this._Rol.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIdRolChanging(value);
                    this.SendPropertyChanging("IdRol");
                    this._IdRol = value;
                    this.SendPropertyChanged("IdRol");
                    this.OnIdRolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ip in the schema.
        /// </summary>
        [Column(Name = @"ip", Storage = "_Ip", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Ip
        {
            get
            {
                return this._Ip;
            }
            set
            {
                if (this._Ip != value)
                {
                    this.OnIpChanging(value);
                    this.SendPropertyChanging("Ip");
                    this._Ip = value;
                    this.SendPropertyChanged("Ip");
                    this.OnIpChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mac in the schema.
        /// </summary>
        [Column(Name = @"mac", Storage = "_Mac", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Mac
        {
            get
            {
                return this._Mac;
            }
            set
            {
                if (this._Mac != value)
                {
                    this.OnMacChanging(value);
                    this.SendPropertyChanging("Mac");
                    this._Mac = value;
                    this.SendPropertyChanged("Mac");
                    this.OnMacChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Imagen in the schema.
        /// </summary>
        [Column(Name = @"imagen", Storage = "_Imagen", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Imagen
        {
            get
            {
                return this._Imagen;
            }
            set
            {
                if (this._Imagen != value)
                {
                    this.OnImagenChanging(value);
                    this.SendPropertyChanging("Imagen");
                    this._Imagen = value;
                    this.SendPropertyChanged("Imagen");
                    this.OnImagenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDeUltimoExamen in the schema.
        /// </summary>
        [Column(Name = @"fecha_de_ultimo_examen", Storage = "_FechaDeUltimoExamen", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDeUltimoExamen
        {
            get
            {
                return this._FechaDeUltimoExamen;
            }
            set
            {
                if (this._FechaDeUltimoExamen != value)
                {
                    this.OnFechaDeUltimoExamenChanging(value);
                    this.SendPropertyChanging("FechaDeUltimoExamen");
                    this._FechaDeUltimoExamen = value;
                    this.SendPropertyChanged("FechaDeUltimoExamen");
                    this.OnFechaDeUltimoExamenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [Column(Name = @"correo", Storage = "_Correo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Correo
        {
            get
            {
                return this._Correo;
            }
            set
            {
                if (this._Correo != value)
                {
                    this.OnCorreoChanging(value);
                    this.SendPropertyChanging("Correo");
                    this._Correo = value;
                    this.SendPropertyChanged("Correo");
                    this.OnCorreoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [Column(Name = @"estado", Storage = "_Estado", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Estado
        {
            get
            {
                return this._Estado;
            }
            set
            {
                if (this._Estado != value)
                {
                    this.OnEstadoChanging(value);
                    this.SendPropertyChanging("Estado");
                    this._Estado = value;
                    this.SendPropertyChanged("Estado");
                    this.OnEstadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HojaDeVidas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Usuario_HojaDeVida", Storage="_HojaDeVidas", ThisKey="IdUsuario", OtherKey="IdDoctor", DeleteRule="NO ACTION")]
        public EntitySet<HojaDeVida> HojaDeVidas
        {
            get
            {
                return this._HojaDeVidas;
            }
            set
            {
                this._HojaDeVidas.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Cirugias in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Usuario_Cirugia", Storage="_Cirugias", ThisKey="IdUsuario", OtherKey="IdUser", DeleteRule="NO ACTION")]
        public EntitySet<Cirugia> Cirugias
        {
            get
            {
                return this._Cirugias;
            }
            set
            {
                this._Cirugias.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Rol in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Usuario", Storage="_Rol", ThisKey="IdRol", OtherKey="IdRol", IsForeignKey=true)]
        public Rol Rol
        {
            get
            {
                return this._Rol.Entity;
            }
            set
            {
                Rol previousValue = this._Rol.Entity;
                if ((previousValue != value) || (this._Rol.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Rol");
                    if (previousValue != null)
                    {
                        this._Rol.Entity = null;
                        previousValue.Usuarios.Remove(this);
                    }
                    this._Rol.Entity = value;
                    if (value != null)
                    {
                        this._IdRol = value.IdRol;
                        value.Usuarios.Add(this);
                    }
                    else
                    {
                        this._IdRol = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Rol");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_HojaDeVidas(HojaDeVida entity)
        {
            this.SendPropertyChanging("HojaDeVidas");
            entity.Usuario = this;
        }
    
        private void detach_HojaDeVidas(HojaDeVida entity)
        {
            this.SendPropertyChanging("HojaDeVidas");
            entity.Usuario = null;
        }

        private void attach_Cirugias(Cirugia entity)
        {
            this.SendPropertyChanging("Cirugias");
            entity.Usuario = this;
        }
    
        private void detach_Cirugias(Cirugia entity)
        {
            this.SendPropertyChanging("Cirugias");
            entity.Usuario = null;
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Mostrarcitasvistaid in the schema.
    /// </summary>
    [Table(Name = @"hospital.mostrarcitasvistaid")]
    public partial class Mostrarcitasvistaid
    {
        #pragma warning disable 0649

        private string _Tipo;

        private System.Nullable<System.DateTime> _HoraIniCita;

        private System.Nullable<System.DateTime> _HoraFinCita;

        private string _Diagnostico;

        private string _Nombre;

        private string _Apellido;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnTipoChanging(string value);
        partial void OnTipoChanged();
        partial void OnHoraIniCitaChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraIniCitaChanged();
        partial void OnHoraFinCitaChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraFinCitaChanged();
        partial void OnDiagnosticoChanging(string value);
        partial void OnDiagnosticoChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        #endregion

        public Mostrarcitasvistaid()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Tipo in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Tipo
        {
            get
            {
                return this._Tipo;
            }
            set
            {
                if (this._Tipo != value)
                {
                    this._Tipo = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraIniCita in the schema.
        /// </summary>
        [Column(Name = @"hora_ini_cita", Storage = "_HoraIniCita", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraIniCita
        {
            get
            {
                return this._HoraIniCita;
            }
            set
            {
                if (this._HoraIniCita != value)
                {
                    this._HoraIniCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFinCita in the schema.
        /// </summary>
        [Column(Name = @"hora_fin_cita", Storage = "_HoraFinCita", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraFinCita
        {
            get
            {
                return this._HoraFinCita;
            }
            set
            {
                if (this._HoraFinCita != value)
                {
                    this._HoraFinCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Diagnostico in the schema.
        /// </summary>
        [Column(Name = @"diagnostico", Storage = "_Diagnostico", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Diagnostico
        {
            get
            {
                return this._Diagnostico;
            }
            set
            {
                if (this._Diagnostico != value)
                {
                    this._Diagnostico = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this._Nombre = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this._Apellido = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Mostrarcitasdoc in the schema.
    /// </summary>
    [Table(Name = @"hospital.mostrarcitasdoc")]
    public partial class Mostrarcitasdoc
    {
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private System.Nullable<System.TimeSpan> _HoraIniCita;

        private System.Nullable<System.TimeSpan> _HoraFinCita;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnHoraIniCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraIniCitaChanged();
        partial void OnHoraFinCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraFinCitaChanged();
        #endregion

        public Mostrarcitasdoc()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this._Nombre = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this._Apellido = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraIniCita in the schema.
        /// </summary>
        [Column(Name = @"hora_ini_cita", Storage = "_HoraIniCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraIniCita
        {
            get
            {
                return this._HoraIniCita;
            }
            set
            {
                if (this._HoraIniCita != value)
                {
                    this._HoraIniCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFinCita in the schema.
        /// </summary>
        [Column(Name = @"hora_fin_cita", Storage = "_HoraFinCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraFinCita
        {
            get
            {
                return this._HoraFinCita;
            }
            set
            {
                if (this._HoraFinCita != value)
                {
                    this._HoraFinCita = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for Medicapp13Context.Mostrarcitasvista in the schema.
    /// </summary>
    [Table(Name = @"hospital.mostrarcitasvista")]
    public partial class Mostrarcitasvista
    {
        #pragma warning disable 0649

        private string _EspecildadCita;

        private System.Nullable<System.TimeSpan> _HoraIniCita;

        private System.Nullable<System.TimeSpan> _HoraFinCita;

        private string _Diagnostico;

        private string _Nombre;

        private string _Apellido;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnEspecildadCitaChanging(string value);
        partial void OnEspecildadCitaChanged();
        partial void OnHoraIniCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraIniCitaChanged();
        partial void OnHoraFinCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraFinCitaChanged();
        partial void OnDiagnosticoChanging(string value);
        partial void OnDiagnosticoChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        #endregion

        public Mostrarcitasvista()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for EspecildadCita in the schema.
        /// </summary>
        [Column(Name = @"especildad_cita", Storage = "_EspecildadCita", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string EspecildadCita
        {
            get
            {
                return this._EspecildadCita;
            }
            set
            {
                if (this._EspecildadCita != value)
                {
                    this._EspecildadCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraIniCita in the schema.
        /// </summary>
        [Column(Name = @"hora_ini_cita", Storage = "_HoraIniCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraIniCita
        {
            get
            {
                return this._HoraIniCita;
            }
            set
            {
                if (this._HoraIniCita != value)
                {
                    this._HoraIniCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFinCita in the schema.
        /// </summary>
        [Column(Name = @"hora_fin_cita", Storage = "_HoraFinCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraFinCita
        {
            get
            {
                return this._HoraFinCita;
            }
            set
            {
                if (this._HoraFinCita != value)
                {
                    this._HoraFinCita = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Diagnostico in the schema.
        /// </summary>
        [Column(Name = @"diagnostico", Storage = "_Diagnostico", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Diagnostico
        {
            get
            {
                return this._Diagnostico;
            }
            set
            {
                if (this._Diagnostico != value)
                {
                    this._Diagnostico = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this._Nombre = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this._Apellido = value;
                }
            }
        }
    }

}

namespace Medicapp13Context
{

    /// <summary>
    /// There are no comments for FVerificarCitaResult in the schema.
    /// </summary>
    public partial class FVerificarCitaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<System.DateTime> _HoraInicio;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnHoraInicioChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraInicioChanged();
        #endregion

        public FVerificarCitaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Buscarusuario2Result in the schema.
    /// </summary>
    public partial class Buscarusuario2Result: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _IdUsuario;

        private string _Username;

        private string _Nombre;

        private string _Apellido;

        private string _Edad;

        private string _TipoDeSangre;

        private System.Nullable<int> _IdRol;

        private string _Ip;

        private string _Mac;

        private string _Imagen;

        private string _Correo;

        private string _Documento;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnIdRolChanging(System.Nullable<int> value);
        partial void OnIdRolChanged();
        partial void OnIpChanging(string value);
        partial void OnIpChanged();
        partial void OnMacChanging(string value);
        partial void OnMacChanged();
        partial void OnImagenChanging(string value);
        partial void OnImagenChanged();
        partial void OnCorreoChanging(string value);
        partial void OnCorreoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        #endregion

        public Buscarusuario2Result()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Username in the schema.
        /// </summary>
        [Column(Name = @"username", Storage = "_Username", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if (this._Username != value)
                {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging("Username");
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdRol in the schema.
        /// </summary>
        [Column(Name = @"id_rol", Storage = "_IdRol", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdRol
        {
            get
            {
                return this._IdRol;
            }
            set
            {
                if (this._IdRol != value)
                {
                    this.OnIdRolChanging(value);
                    this.SendPropertyChanging("IdRol");
                    this._IdRol = value;
                    this.SendPropertyChanged("IdRol");
                    this.OnIdRolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ip in the schema.
        /// </summary>
        [Column(Name = @"ip", Storage = "_Ip", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Ip
        {
            get
            {
                return this._Ip;
            }
            set
            {
                if (this._Ip != value)
                {
                    this.OnIpChanging(value);
                    this.SendPropertyChanging("Ip");
                    this._Ip = value;
                    this.SendPropertyChanged("Ip");
                    this.OnIpChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mac in the schema.
        /// </summary>
        [Column(Name = @"mac", Storage = "_Mac", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Mac
        {
            get
            {
                return this._Mac;
            }
            set
            {
                if (this._Mac != value)
                {
                    this.OnMacChanging(value);
                    this.SendPropertyChanging("Mac");
                    this._Mac = value;
                    this.SendPropertyChanged("Mac");
                    this.OnMacChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Imagen in the schema.
        /// </summary>
        [Column(Name = @"imagen", Storage = "_Imagen", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Imagen
        {
            get
            {
                return this._Imagen;
            }
            set
            {
                if (this._Imagen != value)
                {
                    this.OnImagenChanging(value);
                    this.SendPropertyChanging("Imagen");
                    this._Imagen = value;
                    this.SendPropertyChanged("Imagen");
                    this.OnImagenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [Column(Name = @"correo", Storage = "_Correo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Correo
        {
            get
            {
                return this._Correo;
            }
            set
            {
                if (this._Correo != value)
                {
                    this.OnCorreoChanging(value);
                    this.SendPropertyChanging("Correo");
                    this._Correo = value;
                    this.SendPropertyChanged("Correo");
                    this.OnCorreoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BuscarcitareporteResult in the schema.
    /// </summary>
    public partial class BuscarcitareporteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Documento;

        private string _Edad;

        private string _TipoDeSangre;

        private System.Nullable<System.DateTime> _FechaDeUltimoExamen;

        private System.Nullable<System.DateTime> _HoraInicio;

        private System.Nullable<System.DateTime> _HoraFin;

        private string _Tipo;

        private string _Diagnostico;

        private string _Nombredoc;

        private string _Apellidodoc;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnFechaDeUltimoExamenChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDeUltimoExamenChanged();
        partial void OnHoraInicioChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraInicioChanged();
        partial void OnHoraFinChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraFinChanged();
        partial void OnTipoChanging(string value);
        partial void OnTipoChanged();
        partial void OnDiagnosticoChanging(string value);
        partial void OnDiagnosticoChanged();
        partial void OnNombredocChanging(string value);
        partial void OnNombredocChanged();
        partial void OnApellidodocChanging(string value);
        partial void OnApellidodocChanged();
        #endregion

        public BuscarcitareporteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDeUltimoExamen in the schema.
        /// </summary>
        [Column(Name = @"fecha_de_ultimo_examen", Storage = "_FechaDeUltimoExamen", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDeUltimoExamen
        {
            get
            {
                return this._FechaDeUltimoExamen;
            }
            set
            {
                if (this._FechaDeUltimoExamen != value)
                {
                    this.OnFechaDeUltimoExamenChanging(value);
                    this.SendPropertyChanging("FechaDeUltimoExamen");
                    this._FechaDeUltimoExamen = value;
                    this.SendPropertyChanged("FechaDeUltimoExamen");
                    this.OnFechaDeUltimoExamenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFin in the schema.
        /// </summary>
        [Column(Name = @"hora_fin", Storage = "_HoraFin", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraFin
        {
            get
            {
                return this._HoraFin;
            }
            set
            {
                if (this._HoraFin != value)
                {
                    this.OnHoraFinChanging(value);
                    this.SendPropertyChanging("HoraFin");
                    this._HoraFin = value;
                    this.SendPropertyChanged("HoraFin");
                    this.OnHoraFinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Tipo
        {
            get
            {
                return this._Tipo;
            }
            set
            {
                if (this._Tipo != value)
                {
                    this.OnTipoChanging(value);
                    this.SendPropertyChanging("Tipo");
                    this._Tipo = value;
                    this.SendPropertyChanged("Tipo");
                    this.OnTipoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Diagnostico in the schema.
        /// </summary>
        [Column(Name = @"diagnostico", Storage = "_Diagnostico", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Diagnostico
        {
            get
            {
                return this._Diagnostico;
            }
            set
            {
                if (this._Diagnostico != value)
                {
                    this.OnDiagnosticoChanging(value);
                    this.SendPropertyChanging("Diagnostico");
                    this._Diagnostico = value;
                    this.SendPropertyChanged("Diagnostico");
                    this.OnDiagnosticoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombredoc in the schema.
        /// </summary>
        [Column(Name = @"nombredoc", Storage = "_Nombredoc", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombredoc
        {
            get
            {
                return this._Nombredoc;
            }
            set
            {
                if (this._Nombredoc != value)
                {
                    this.OnNombredocChanging(value);
                    this.SendPropertyChanging("Nombredoc");
                    this._Nombredoc = value;
                    this.SendPropertyChanged("Nombredoc");
                    this.OnNombredocChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellidodoc in the schema.
        /// </summary>
        [Column(Name = @"apellidodoc", Storage = "_Apellidodoc", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellidodoc
        {
            get
            {
                return this._Apellidodoc;
            }
            set
            {
                if (this._Apellidodoc != value)
                {
                    this.OnApellidodocChanging(value);
                    this.SendPropertyChanging("Apellidodoc");
                    this._Apellidodoc = value;
                    this.SendPropertyChanged("Apellidodoc");
                    this.OnApellidodocChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscarDoctoreResult in the schema.
    /// </summary>
    public partial class FBuscarDoctoreResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _IdUsuario;

        private string _Imagen;

        private string _Nombre;

        private string _Apellido;

        private string _Especialidad;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        partial void OnImagenChanging(string value);
        partial void OnImagenChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEspecialidadChanging(string value);
        partial void OnEspecialidadChanged();
        #endregion

        public FBuscarDoctoreResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Imagen in the schema.
        /// </summary>
        [Column(Name = @"imagen", Storage = "_Imagen", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Imagen
        {
            get
            {
                return this._Imagen;
            }
            set
            {
                if (this._Imagen != value)
                {
                    this.OnImagenChanging(value);
                    this.SendPropertyChanging("Imagen");
                    this._Imagen = value;
                    this.SendPropertyChanged("Imagen");
                    this.OnImagenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Especialidad in the schema.
        /// </summary>
        [Column(Name = @"especialidad", Storage = "_Especialidad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Especialidad
        {
            get
            {
                return this._Especialidad;
            }
            set
            {
                if (this._Especialidad != value)
                {
                    this.OnEspecialidadChanging(value);
                    this.SendPropertyChanging("Especialidad");
                    this._Especialidad = value;
                    this.SendPropertyChanged("Especialidad");
                    this.OnEspecialidadChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FCancelarCitasHoraDoctorResult in the schema.
    /// </summary>
    public partial class FCancelarCitasHoraDoctorResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<bool> _ReturnValue;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnReturnValueChanging(System.Nullable<bool> value);
        partial void OnReturnValueChanged();
        #endregion

        public FCancelarCitasHoraDoctorResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ReturnValue in the schema.
        /// </summary>
        [Column(Name = @"return_value", Storage = "_ReturnValue", DbType = "BOOLEAN", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> ReturnValue
        {
            get
            {
                return this._ReturnValue;
            }
            set
            {
                if (this._ReturnValue != value)
                {
                    this.OnReturnValueChanging(value);
                    this.SendPropertyChanging("ReturnValue");
                    this._ReturnValue = value;
                    this.SendPropertyChanged("ReturnValue");
                    this.OnReturnValueChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MostrardoctoresrolResult in the schema.
    /// </summary>
    public partial class MostrardoctoresrolResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Edad;

        private string _Especialidad;

        private string _Imagen;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnEspecialidadChanging(string value);
        partial void OnEspecialidadChanged();
        partial void OnImagenChanging(string value);
        partial void OnImagenChanged();
        #endregion

        public MostrardoctoresrolResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Especialidad in the schema.
        /// </summary>
        [Column(Name = @"especialidad", Storage = "_Especialidad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Especialidad
        {
            get
            {
                return this._Especialidad;
            }
            set
            {
                if (this._Especialidad != value)
                {
                    this.OnEspecialidadChanging(value);
                    this.SendPropertyChanging("Especialidad");
                    this._Especialidad = value;
                    this.SendPropertyChanged("Especialidad");
                    this.OnEspecialidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Imagen in the schema.
        /// </summary>
        [Column(Name = @"imagen", Storage = "_Imagen", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Imagen
        {
            get
            {
                return this._Imagen;
            }
            set
            {
                if (this._Imagen != value)
                {
                    this.OnImagenChanging(value);
                    this.SendPropertyChanging("Imagen");
                    this._Imagen = value;
                    this.SendPropertyChanged("Imagen");
                    this.OnImagenChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscaTodosPacienteResult in the schema.
    /// </summary>
    public partial class FBuscaTodosPacienteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _IdUsuario;

        private string _Username;

        private string _Clave;

        private string _Nombre;

        private string _Apellido;

        private string _Edad;

        private string _TipoDeSangre;

        private string _Correo;

        private string _Documento;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnClaveChanging(string value);
        partial void OnClaveChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnCorreoChanging(string value);
        partial void OnCorreoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        #endregion

        public FBuscaTodosPacienteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Username in the schema.
        /// </summary>
        [Column(Name = @"username", Storage = "_Username", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if (this._Username != value)
                {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging("Username");
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Clave in the schema.
        /// </summary>
        [Column(Name = @"clave", Storage = "_Clave", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Clave
        {
            get
            {
                return this._Clave;
            }
            set
            {
                if (this._Clave != value)
                {
                    this.OnClaveChanging(value);
                    this.SendPropertyChanging("Clave");
                    this._Clave = value;
                    this.SendPropertyChanged("Clave");
                    this.OnClaveChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [Column(Name = @"correo", Storage = "_Correo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Correo
        {
            get
            {
                return this._Correo;
            }
            set
            {
                if (this._Correo != value)
                {
                    this.OnCorreoChanging(value);
                    this.SendPropertyChanging("Correo");
                    this._Correo = value;
                    this.SendPropertyChanged("Correo");
                    this.OnCorreoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AlergiasreporteResult in the schema.
    /// </summary>
    public partial class AlergiasreporteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Documento;

        private string _Edad;

        private string _TipoDeSangre;

        private System.Nullable<System.DateTime> _FechaDeUltimoExamen;

        private string _Descripcion;

        private string _NombreAlergia;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnFechaDeUltimoExamenChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDeUltimoExamenChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnNombreAlergiaChanging(string value);
        partial void OnNombreAlergiaChanged();
        #endregion

        public AlergiasreporteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDeUltimoExamen in the schema.
        /// </summary>
        [Column(Name = @"fecha_de_ultimo_examen", Storage = "_FechaDeUltimoExamen", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDeUltimoExamen
        {
            get
            {
                return this._FechaDeUltimoExamen;
            }
            set
            {
                if (this._FechaDeUltimoExamen != value)
                {
                    this.OnFechaDeUltimoExamenChanging(value);
                    this.SendPropertyChanging("FechaDeUltimoExamen");
                    this._FechaDeUltimoExamen = value;
                    this.SendPropertyChanged("FechaDeUltimoExamen");
                    this.OnFechaDeUltimoExamenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreAlergia in the schema.
        /// </summary>
        [Column(Name = @"nombre_alergia", Storage = "_NombreAlergia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string NombreAlergia
        {
            get
            {
                return this._NombreAlergia;
            }
            set
            {
                if (this._NombreAlergia != value)
                {
                    this.OnNombreAlergiaChanging(value);
                    this.SendPropertyChanging("NombreAlergia");
                    this._NombreAlergia = value;
                    this.SendPropertyChanged("NombreAlergia");
                    this.OnNombreAlergiaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for CirugiasreporteResult in the schema.
    /// </summary>
    public partial class CirugiasreporteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Documento;

        private string _Edad;

        private string _TipoDeSangre;

        private System.Nullable<System.DateTime> _FechaDeUltimoExamen;

        private string _NombreCirugia;

        private string _Descripcion;

        private string _FechaCirugia;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnFechaDeUltimoExamenChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDeUltimoExamenChanged();
        partial void OnNombreCirugiaChanging(string value);
        partial void OnNombreCirugiaChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnFechaCirugiaChanging(string value);
        partial void OnFechaCirugiaChanged();
        #endregion

        public CirugiasreporteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDeUltimoExamen in the schema.
        /// </summary>
        [Column(Name = @"fecha_de_ultimo_examen", Storage = "_FechaDeUltimoExamen", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDeUltimoExamen
        {
            get
            {
                return this._FechaDeUltimoExamen;
            }
            set
            {
                if (this._FechaDeUltimoExamen != value)
                {
                    this.OnFechaDeUltimoExamenChanging(value);
                    this.SendPropertyChanging("FechaDeUltimoExamen");
                    this._FechaDeUltimoExamen = value;
                    this.SendPropertyChanged("FechaDeUltimoExamen");
                    this.OnFechaDeUltimoExamenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreCirugia in the schema.
        /// </summary>
        [Column(Name = @"nombre_cirugia", Storage = "_NombreCirugia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string NombreCirugia
        {
            get
            {
                return this._NombreCirugia;
            }
            set
            {
                if (this._NombreCirugia != value)
                {
                    this.OnNombreCirugiaChanging(value);
                    this.SendPropertyChanging("NombreCirugia");
                    this._NombreCirugia = value;
                    this.SendPropertyChanged("NombreCirugia");
                    this.OnNombreCirugiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaCirugia in the schema.
        /// </summary>
        [Column(Name = @"fecha_cirugia", Storage = "_FechaCirugia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string FechaCirugia
        {
            get
            {
                return this._FechaCirugia;
            }
            set
            {
                if (this._FechaCirugia != value)
                {
                    this.OnFechaCirugiaChanging(value);
                    this.SendPropertyChanging("FechaCirugia");
                    this._FechaCirugia = value;
                    this.SendPropertyChanged("FechaCirugia");
                    this.OnFechaCirugiaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FHvDoctorResult in the schema.
    /// </summary>
    public partial class FHvDoctorResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Edad;

        private string _Estudios;

        private string _Especialidad;

        private string _Imagen;

        private string _Experiencia;

        private string _Fellows;

        private string _Idiomas;

        private string _OtrosEstudios;

        private string _PerfilProfesional;

        private string _Universidad;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnEstudiosChanging(string value);
        partial void OnEstudiosChanged();
        partial void OnEspecialidadChanging(string value);
        partial void OnEspecialidadChanged();
        partial void OnImagenChanging(string value);
        partial void OnImagenChanged();
        partial void OnExperienciaChanging(string value);
        partial void OnExperienciaChanged();
        partial void OnFellowsChanging(string value);
        partial void OnFellowsChanged();
        partial void OnIdiomasChanging(string value);
        partial void OnIdiomasChanged();
        partial void OnOtrosEstudiosChanging(string value);
        partial void OnOtrosEstudiosChanged();
        partial void OnPerfilProfesionalChanging(string value);
        partial void OnPerfilProfesionalChanged();
        partial void OnUniversidadChanging(string value);
        partial void OnUniversidadChanged();
        #endregion

        public FHvDoctorResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Estudios in the schema.
        /// </summary>
        [Column(Name = @"estudios", Storage = "_Estudios", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Estudios
        {
            get
            {
                return this._Estudios;
            }
            set
            {
                if (this._Estudios != value)
                {
                    this.OnEstudiosChanging(value);
                    this.SendPropertyChanging("Estudios");
                    this._Estudios = value;
                    this.SendPropertyChanged("Estudios");
                    this.OnEstudiosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Especialidad in the schema.
        /// </summary>
        [Column(Name = @"especialidad", Storage = "_Especialidad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Especialidad
        {
            get
            {
                return this._Especialidad;
            }
            set
            {
                if (this._Especialidad != value)
                {
                    this.OnEspecialidadChanging(value);
                    this.SendPropertyChanging("Especialidad");
                    this._Especialidad = value;
                    this.SendPropertyChanged("Especialidad");
                    this.OnEspecialidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Imagen in the schema.
        /// </summary>
        [Column(Name = @"imagen", Storage = "_Imagen", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Imagen
        {
            get
            {
                return this._Imagen;
            }
            set
            {
                if (this._Imagen != value)
                {
                    this.OnImagenChanging(value);
                    this.SendPropertyChanging("Imagen");
                    this._Imagen = value;
                    this.SendPropertyChanged("Imagen");
                    this.OnImagenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Experiencia in the schema.
        /// </summary>
        [Column(Name = @"experiencia", Storage = "_Experiencia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Experiencia
        {
            get
            {
                return this._Experiencia;
            }
            set
            {
                if (this._Experiencia != value)
                {
                    this.OnExperienciaChanging(value);
                    this.SendPropertyChanging("Experiencia");
                    this._Experiencia = value;
                    this.SendPropertyChanged("Experiencia");
                    this.OnExperienciaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fellows in the schema.
        /// </summary>
        [Column(Name = @"fellows", Storage = "_Fellows", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Fellows
        {
            get
            {
                return this._Fellows;
            }
            set
            {
                if (this._Fellows != value)
                {
                    this.OnFellowsChanging(value);
                    this.SendPropertyChanging("Fellows");
                    this._Fellows = value;
                    this.SendPropertyChanged("Fellows");
                    this.OnFellowsChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Idiomas in the schema.
        /// </summary>
        [Column(Name = @"idiomas", Storage = "_Idiomas", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Idiomas
        {
            get
            {
                return this._Idiomas;
            }
            set
            {
                if (this._Idiomas != value)
                {
                    this.OnIdiomasChanging(value);
                    this.SendPropertyChanging("Idiomas");
                    this._Idiomas = value;
                    this.SendPropertyChanged("Idiomas");
                    this.OnIdiomasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OtrosEstudios in the schema.
        /// </summary>
        [Column(Name = @"otros_estudios", Storage = "_OtrosEstudios", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string OtrosEstudios
        {
            get
            {
                return this._OtrosEstudios;
            }
            set
            {
                if (this._OtrosEstudios != value)
                {
                    this.OnOtrosEstudiosChanging(value);
                    this.SendPropertyChanging("OtrosEstudios");
                    this._OtrosEstudios = value;
                    this.SendPropertyChanged("OtrosEstudios");
                    this.OnOtrosEstudiosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PerfilProfesional in the schema.
        /// </summary>
        [Column(Name = @"perfil_profesional", Storage = "_PerfilProfesional", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string PerfilProfesional
        {
            get
            {
                return this._PerfilProfesional;
            }
            set
            {
                if (this._PerfilProfesional != value)
                {
                    this.OnPerfilProfesionalChanging(value);
                    this.SendPropertyChanging("PerfilProfesional");
                    this._PerfilProfesional = value;
                    this.SendPropertyChanged("PerfilProfesional");
                    this.OnPerfilProfesionalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Universidad in the schema.
        /// </summary>
        [Column(Name = @"universidad", Storage = "_Universidad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Universidad
        {
            get
            {
                return this._Universidad;
            }
            set
            {
                if (this._Universidad != value)
                {
                    this.OnUniversidadChanging(value);
                    this.SendPropertyChanging("Universidad");
                    this._Universidad = value;
                    this.SendPropertyChanged("Universidad");
                    this.OnUniversidadChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscaCitaResult in the schema.
    /// </summary>
    public partial class FBuscaCitaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<System.TimeSpan> _HoraIniCita;

        private System.Nullable<System.TimeSpan> _HoraFinCita;

        private string _Nombre;

        private string _Apellido;

        private System.Nullable<int> _DoctorId;

        private System.Nullable<int> _Idcita;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnHoraIniCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraIniCitaChanged();
        partial void OnHoraFinCitaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraFinCitaChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnDoctorIdChanging(System.Nullable<int> value);
        partial void OnDoctorIdChanged();
        partial void OnIdcitaChanging(System.Nullable<int> value);
        partial void OnIdcitaChanged();
        #endregion

        public FBuscaCitaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for HoraIniCita in the schema.
        /// </summary>
        [Column(Name = @"hora_ini_cita", Storage = "_HoraIniCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraIniCita
        {
            get
            {
                return this._HoraIniCita;
            }
            set
            {
                if (this._HoraIniCita != value)
                {
                    this.OnHoraIniCitaChanging(value);
                    this.SendPropertyChanging("HoraIniCita");
                    this._HoraIniCita = value;
                    this.SendPropertyChanged("HoraIniCita");
                    this.OnHoraIniCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFinCita in the schema.
        /// </summary>
        [Column(Name = @"hora_fin_cita", Storage = "_HoraFinCita", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraFinCita
        {
            get
            {
                return this._HoraFinCita;
            }
            set
            {
                if (this._HoraFinCita != value)
                {
                    this.OnHoraFinCitaChanging(value);
                    this.SendPropertyChanging("HoraFinCita");
                    this._HoraFinCita = value;
                    this.SendPropertyChanged("HoraFinCita");
                    this.OnHoraFinCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DoctorId in the schema.
        /// </summary>
        [Column(Name = @"doctor_id", Storage = "_DoctorId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> DoctorId
        {
            get
            {
                return this._DoctorId;
            }
            set
            {
                if (this._DoctorId != value)
                {
                    this.OnDoctorIdChanging(value);
                    this.SendPropertyChanging("DoctorId");
                    this._DoctorId = value;
                    this.SendPropertyChanged("DoctorId");
                    this.OnDoctorIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Idcita in the schema.
        /// </summary>
        [Column(Name = @"idcita_", Storage = "_Idcita", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Idcita
        {
            get
            {
                return this._Idcita;
            }
            set
            {
                if (this._Idcita != value)
                {
                    this.OnIdcitaChanging(value);
                    this.SendPropertyChanging("Idcita");
                    this._Idcita = value;
                    this.SendPropertyChanged("Idcita");
                    this.OnIdcitaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscarcitasUsuariovResult in the schema.
    /// </summary>
    public partial class FBuscarcitasUsuariovResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _IdCita;

        private string _Tipo;

        private System.Nullable<System.DateTime> _HoraIniCita;

        private System.Nullable<System.DateTime> _HoraFinCita;

        private string _Diagnostico;

        private string _Nombre;

        private string _Apellido;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdCitaChanging(System.Nullable<int> value);
        partial void OnIdCitaChanged();
        partial void OnTipoChanging(string value);
        partial void OnTipoChanged();
        partial void OnHoraIniCitaChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraIniCitaChanged();
        partial void OnHoraFinCitaChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraFinCitaChanged();
        partial void OnDiagnosticoChanging(string value);
        partial void OnDiagnosticoChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        #endregion

        public FBuscarcitasUsuariovResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Tipo
        {
            get
            {
                return this._Tipo;
            }
            set
            {
                if (this._Tipo != value)
                {
                    this.OnTipoChanging(value);
                    this.SendPropertyChanging("Tipo");
                    this._Tipo = value;
                    this.SendPropertyChanged("Tipo");
                    this.OnTipoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraIniCita in the schema.
        /// </summary>
        [Column(Name = @"hora_ini_cita", Storage = "_HoraIniCita", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraIniCita
        {
            get
            {
                return this._HoraIniCita;
            }
            set
            {
                if (this._HoraIniCita != value)
                {
                    this.OnHoraIniCitaChanging(value);
                    this.SendPropertyChanging("HoraIniCita");
                    this._HoraIniCita = value;
                    this.SendPropertyChanged("HoraIniCita");
                    this.OnHoraIniCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFinCita in the schema.
        /// </summary>
        [Column(Name = @"hora_fin_cita", Storage = "_HoraFinCita", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraFinCita
        {
            get
            {
                return this._HoraFinCita;
            }
            set
            {
                if (this._HoraFinCita != value)
                {
                    this.OnHoraFinCitaChanging(value);
                    this.SendPropertyChanging("HoraFinCita");
                    this._HoraFinCita = value;
                    this.SendPropertyChanged("HoraFinCita");
                    this.OnHoraFinCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Diagnostico in the schema.
        /// </summary>
        [Column(Name = @"diagnostico", Storage = "_Diagnostico", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Diagnostico
        {
            get
            {
                return this._Diagnostico;
            }
            set
            {
                if (this._Diagnostico != value)
                {
                    this.OnDiagnosticoChanging(value);
                    this.SendPropertyChanging("Diagnostico");
                    this._Diagnostico = value;
                    this.SendPropertyChanged("Diagnostico");
                    this.OnDiagnosticoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MedicamentosreporteResult in the schema.
    /// </summary>
    public partial class MedicamentosreporteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private string _Apellido;

        private string _Documento;

        private string _Edad;

        private string _TipoDeSangre;

        private System.Nullable<System.DateTime> _FechaDeUltimoExamen;

        private string _Dosis;

        private System.Nullable<System.DateTime> _FechaIni;

        private string _FechaFin;

        private string _NombreMedicamento;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnDocumentoChanging(string value);
        partial void OnDocumentoChanged();
        partial void OnEdadChanging(string value);
        partial void OnEdadChanged();
        partial void OnTipoDeSangreChanging(string value);
        partial void OnTipoDeSangreChanged();
        partial void OnFechaDeUltimoExamenChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDeUltimoExamenChanged();
        partial void OnDosisChanging(string value);
        partial void OnDosisChanged();
        partial void OnFechaIniChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaIniChanged();
        partial void OnFechaFinChanging(string value);
        partial void OnFechaFinChanged();
        partial void OnNombreMedicamentoChanging(string value);
        partial void OnNombreMedicamentoChanged();
        #endregion

        public MedicamentosreporteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Documento in the schema.
        /// </summary>
        [Column(Name = @"documento", Storage = "_Documento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Documento
        {
            get
            {
                return this._Documento;
            }
            set
            {
                if (this._Documento != value)
                {
                    this.OnDocumentoChanging(value);
                    this.SendPropertyChanging("Documento");
                    this._Documento = value;
                    this.SendPropertyChanged("Documento");
                    this.OnDocumentoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [Column(Name = @"edad", Storage = "_Edad", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Edad
        {
            get
            {
                return this._Edad;
            }
            set
            {
                if (this._Edad != value)
                {
                    this.OnEdadChanging(value);
                    this.SendPropertyChanging("Edad");
                    this._Edad = value;
                    this.SendPropertyChanged("Edad");
                    this.OnEdadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoDeSangre in the schema.
        /// </summary>
        [Column(Name = @"tipo_de_sangre", Storage = "_TipoDeSangre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string TipoDeSangre
        {
            get
            {
                return this._TipoDeSangre;
            }
            set
            {
                if (this._TipoDeSangre != value)
                {
                    this.OnTipoDeSangreChanging(value);
                    this.SendPropertyChanging("TipoDeSangre");
                    this._TipoDeSangre = value;
                    this.SendPropertyChanged("TipoDeSangre");
                    this.OnTipoDeSangreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDeUltimoExamen in the schema.
        /// </summary>
        [Column(Name = @"fecha_de_ultimo_examen", Storage = "_FechaDeUltimoExamen", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDeUltimoExamen
        {
            get
            {
                return this._FechaDeUltimoExamen;
            }
            set
            {
                if (this._FechaDeUltimoExamen != value)
                {
                    this.OnFechaDeUltimoExamenChanging(value);
                    this.SendPropertyChanging("FechaDeUltimoExamen");
                    this._FechaDeUltimoExamen = value;
                    this.SendPropertyChanged("FechaDeUltimoExamen");
                    this.OnFechaDeUltimoExamenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Dosis in the schema.
        /// </summary>
        [Column(Name = @"dosis", Storage = "_Dosis", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Dosis
        {
            get
            {
                return this._Dosis;
            }
            set
            {
                if (this._Dosis != value)
                {
                    this.OnDosisChanging(value);
                    this.SendPropertyChanging("Dosis");
                    this._Dosis = value;
                    this.SendPropertyChanged("Dosis");
                    this.OnDosisChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaIni in the schema.
        /// </summary>
        [Column(Name = @"fecha_ini", Storage = "_FechaIni", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaIni
        {
            get
            {
                return this._FechaIni;
            }
            set
            {
                if (this._FechaIni != value)
                {
                    this.OnFechaIniChanging(value);
                    this.SendPropertyChanging("FechaIni");
                    this._FechaIni = value;
                    this.SendPropertyChanged("FechaIni");
                    this.OnFechaIniChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaFin in the schema.
        /// </summary>
        [Column(Name = @"fecha_fin", Storage = "_FechaFin", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string FechaFin
        {
            get
            {
                return this._FechaFin;
            }
            set
            {
                if (this._FechaFin != value)
                {
                    this.OnFechaFinChanging(value);
                    this.SendPropertyChanging("FechaFin");
                    this._FechaFin = value;
                    this.SendPropertyChanged("FechaFin");
                    this.OnFechaFinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreMedicamento in the schema.
        /// </summary>
        [Column(Name = @"nombre_medicamento", Storage = "_NombreMedicamento", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string NombreMedicamento
        {
            get
            {
                return this._NombreMedicamento;
            }
            set
            {
                if (this._NombreMedicamento != value)
                {
                    this.OnNombreMedicamentoChanging(value);
                    this.SendPropertyChanging("NombreMedicamento");
                    this._NombreMedicamento = value;
                    this.SendPropertyChanged("NombreMedicamento");
                    this.OnNombreMedicamentoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FObtenerCorreoResult in the schema.
    /// </summary>
    public partial class FObtenerCorreoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Correo;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCorreoChanging(string value);
        partial void OnCorreoChanged();
        #endregion

        public FObtenerCorreoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [Column(Name = @"correo", Storage = "_Correo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Correo
        {
            get
            {
                return this._Correo;
            }
            set
            {
                if (this._Correo != value)
                {
                    this.OnCorreoChanging(value);
                    this.SendPropertyChanging("Correo");
                    this._Correo = value;
                    this.SendPropertyChanged("Correo");
                    this.OnCorreoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscaHorarioResult in the schema.
    /// </summary>
    public partial class FBuscaHorarioResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Dia;

        private System.Nullable<System.TimeSpan> _HoraInicio;

        private System.Nullable<System.TimeSpan> _HoraFin;

        private System.Nullable<int> _IdUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDiaChanging(string value);
        partial void OnDiaChanged();
        partial void OnHoraInicioChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraInicioChanged();
        partial void OnHoraFinChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHoraFinChanged();
        partial void OnIdUsuarioChanging(System.Nullable<int> value);
        partial void OnIdUsuarioChanged();
        #endregion

        public FBuscaHorarioResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Dia in the schema.
        /// </summary>
        [Column(Name = @"dia", Storage = "_Dia", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Dia
        {
            get
            {
                return this._Dia;
            }
            set
            {
                if (this._Dia != value)
                {
                    this.OnDiaChanging(value);
                    this.SendPropertyChanging("Dia");
                    this._Dia = value;
                    this.SendPropertyChanged("Dia");
                    this.OnDiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFin in the schema.
        /// </summary>
        [Column(Name = @"hora_fin", Storage = "_HoraFin", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HoraFin
        {
            get
            {
                return this._HoraFin;
            }
            set
            {
                if (this._HoraFin != value)
                {
                    this.OnHoraFinChanging(value);
                    this.SendPropertyChanging("HoraFin");
                    this._HoraFin = value;
                    this.SendPropertyChanged("HoraFin");
                    this.OnHoraFinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdUsuario in the schema.
        /// </summary>
        [Column(Name = @"id_usuario", Storage = "_IdUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdUsuario
        {
            get
            {
                return this._IdUsuario;
            }
            set
            {
                if (this._IdUsuario != value)
                {
                    this.OnIdUsuarioChanging(value);
                    this.SendPropertyChanging("IdUsuario");
                    this._IdUsuario = value;
                    this.SendPropertyChanged("IdUsuario");
                    this.OnIdUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FObtenerFechaResult in the schema.
    /// </summary>
    public partial class FObtenerFechaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<System.DateTime> _Fecha;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnFechaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
        #endregion

        public FObtenerFechaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"fecha", Storage = "_Fecha", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FBuscarCitaDResult in the schema.
    /// </summary>
    public partial class FBuscarCitaDResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _IdCita;

        private string _Tipo;

        private string _Nombre;

        private string _Apellido;

        private System.Nullable<System.DateTime> _HoraInicio;

        private System.Nullable<System.DateTime> _HoraFin;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdCitaChanging(System.Nullable<int> value);
        partial void OnIdCitaChanged();
        partial void OnTipoChanging(string value);
        partial void OnTipoChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnApellidoChanging(string value);
        partial void OnApellidoChanged();
        partial void OnHoraInicioChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraInicioChanged();
        partial void OnHoraFinChanging(System.Nullable<System.DateTime> value);
        partial void OnHoraFinChanged();
        #endregion

        public FBuscarCitaDResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IdCita in the schema.
        /// </summary>
        [Column(Name = @"id_cita", Storage = "_IdCita", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCita
        {
            get
            {
                return this._IdCita;
            }
            set
            {
                if (this._IdCita != value)
                {
                    this.OnIdCitaChanging(value);
                    this.SendPropertyChanging("IdCita");
                    this._IdCita = value;
                    this.SendPropertyChanged("IdCita");
                    this.OnIdCitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo in the schema.
        /// </summary>
        [Column(Name = @"tipo", Storage = "_Tipo", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Tipo
        {
            get
            {
                return this._Tipo;
            }
            set
            {
                if (this._Tipo != value)
                {
                    this.OnTipoChanging(value);
                    this.SendPropertyChanging("Tipo");
                    this._Tipo = value;
                    this.SendPropertyChanged("Tipo");
                    this.OnTipoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Apellido in the schema.
        /// </summary>
        [Column(Name = @"apellido", Storage = "_Apellido", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Apellido
        {
            get
            {
                return this._Apellido;
            }
            set
            {
                if (this._Apellido != value)
                {
                    this.OnApellidoChanging(value);
                    this.SendPropertyChanging("Apellido");
                    this._Apellido = value;
                    this.SendPropertyChanged("Apellido");
                    this.OnApellidoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraInicio in the schema.
        /// </summary>
        [Column(Name = @"hora_inicio", Storage = "_HoraInicio", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraInicio
        {
            get
            {
                return this._HoraInicio;
            }
            set
            {
                if (this._HoraInicio != value)
                {
                    this.OnHoraInicioChanging(value);
                    this.SendPropertyChanging("HoraInicio");
                    this._HoraInicio = value;
                    this.SendPropertyChanged("HoraInicio");
                    this.OnHoraInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HoraFin in the schema.
        /// </summary>
        [Column(Name = @"hora_fin", Storage = "_HoraFin", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HoraFin
        {
            get
            {
                return this._HoraFin;
            }
            set
            {
                if (this._HoraFin != value)
                {
                    this.OnHoraFinChanging(value);
                    this.SendPropertyChanging("HoraFin");
                    this._HoraFin = value;
                    this.SendPropertyChanged("HoraFin");
                    this.OnHoraFinChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
